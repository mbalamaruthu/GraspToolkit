/*
* generated by Xtext
*/
grammar InternalGraspDSL;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package uk.ac.standrews.graspide.grasp.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package uk.ac.standrews.graspide.grasp.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import uk.ac.standrews.graspide.grasp.services.GraspDSLGrammarAccess;

}

@parser::members {
 
 	private GraspDSLGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(GraspDSLGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleGraspSpecification
entryRuleGraspSpecification 
:
{ before(grammarAccess.getGraspSpecificationRule()); }
	 ruleGraspSpecification
{ after(grammarAccess.getGraspSpecificationRule()); } 
	 EOF 
;

// Rule GraspSpecification
ruleGraspSpecification
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getGraspSpecificationAccess().getArchitectureAssignment()); }
(rule__GraspSpecification__ArchitectureAssignment)
{ after(grammarAccess.getGraspSpecificationAccess().getArchitectureAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleArchitecture
entryRuleArchitecture 
:
{ before(grammarAccess.getArchitectureRule()); }
	 ruleArchitecture
{ after(grammarAccess.getArchitectureRule()); } 
	 EOF 
;

// Rule Architecture
ruleArchitecture
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getArchitectureAccess().getGroup()); }
(rule__Architecture__Group__0)
{ after(grammarAccess.getArchitectureAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleArchitectureBody
entryRuleArchitectureBody 
:
{ before(grammarAccess.getArchitectureBodyRule()); }
	 ruleArchitectureBody
{ after(grammarAccess.getArchitectureBodyRule()); } 
	 EOF 
;

// Rule ArchitectureBody
ruleArchitectureBody
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getArchitectureBodyAccess().getGroup()); }
(rule__ArchitectureBody__Group__0)
{ after(grammarAccess.getArchitectureBodyAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDeclarationStart
entryRuleDeclarationStart 
:
{ before(grammarAccess.getDeclarationStartRule()); }
	 ruleDeclarationStart
{ after(grammarAccess.getDeclarationStartRule()); } 
	 EOF 
;

// Rule DeclarationStart
ruleDeclarationStart
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDeclarationStartAccess().getGroup()); }
(rule__DeclarationStart__Group__0)
{ after(grammarAccess.getDeclarationStartAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDeclarationEnd
entryRuleDeclarationEnd 
:
{ before(grammarAccess.getDeclarationEndRule()); }
	 ruleDeclarationEnd
{ after(grammarAccess.getDeclarationEndRule()); } 
	 EOF 
;

// Rule DeclarationEnd
ruleDeclarationEnd
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDeclarationEndAccess().getGroup()); }
(rule__DeclarationEnd__Group__0)
{ after(grammarAccess.getDeclarationEndAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDeclaration
entryRuleDeclaration 
:
{ before(grammarAccess.getDeclarationRule()); }
	 ruleDeclaration
{ after(grammarAccess.getDeclarationRule()); } 
	 EOF 
;

// Rule Declaration
ruleDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDeclarationAccess().getAlternatives()); }
(rule__Declaration__Alternatives)
{ after(grammarAccess.getDeclarationAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRequirementOrQuality
entryRuleRequirementOrQuality 
:
{ before(grammarAccess.getRequirementOrQualityRule()); }
	 ruleRequirementOrQuality
{ after(grammarAccess.getRequirementOrQualityRule()); } 
	 EOF 
;

// Rule RequirementOrQuality
ruleRequirementOrQuality
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRequirementOrQualityAccess().getAlternatives()); }
(rule__RequirementOrQuality__Alternatives)
{ after(grammarAccess.getRequirementOrQualityAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRequirement
entryRuleRequirement 
:
{ before(grammarAccess.getRequirementRule()); }
	 ruleRequirement
{ after(grammarAccess.getRequirementRule()); } 
	 EOF 
;

// Rule Requirement
ruleRequirement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRequirementAccess().getGroup()); }
(rule__Requirement__Group__0)
{ after(grammarAccess.getRequirementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleQattribute
entryRuleQattribute 
:
{ before(grammarAccess.getQattributeRule()); }
	 ruleQattribute
{ after(grammarAccess.getQattributeRule()); } 
	 EOF 
;

// Rule Qattribute
ruleQattribute
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getQattributeAccess().getGroup()); }
(rule__Qattribute__Group__0)
{ after(grammarAccess.getQattributeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRationale
entryRuleRationale 
:
{ before(grammarAccess.getRationaleRule()); }
	 ruleRationale
{ after(grammarAccess.getRationaleRule()); } 
	 EOF 
;

// Rule Rationale
ruleRationale
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRationaleAccess().getGroup()); }
(rule__Rationale__Group__0)
{ after(grammarAccess.getRationaleAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleReason
entryRuleReason 
:
{ before(grammarAccess.getReasonRule()); }
	 ruleReason
{ after(grammarAccess.getReasonRule()); } 
	 EOF 
;

// Rule Reason
ruleReason
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getReasonAccess().getGroup()); }
(rule__Reason__Group__0)
{ after(grammarAccess.getReasonAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTemplate
entryRuleTemplate 
:
{ before(grammarAccess.getTemplateRule()); }
	 ruleTemplate
{ after(grammarAccess.getTemplateRule()); } 
	 EOF 
;

// Rule Template
ruleTemplate
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTemplateAccess().getGroup()); }
(rule__Template__Group__0)
{ after(grammarAccess.getTemplateAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTemplateConstituent
entryRuleTemplateConstituent 
:
{ before(grammarAccess.getTemplateConstituentRule()); }
	 ruleTemplateConstituent
{ after(grammarAccess.getTemplateConstituentRule()); } 
	 EOF 
;

// Rule TemplateConstituent
ruleTemplateConstituent
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTemplateConstituentAccess().getAlternatives()); }
(rule__TemplateConstituent__Alternatives)
{ after(grammarAccess.getTemplateConstituentAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleProvides
entryRuleProvides 
:
{ before(grammarAccess.getProvidesRule()); }
	 ruleProvides
{ after(grammarAccess.getProvidesRule()); } 
	 EOF 
;

// Rule Provides
ruleProvides
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getProvidesAccess().getGroup()); }
(rule__Provides__Group__0)
{ after(grammarAccess.getProvidesAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleProvidesConstituent
entryRuleProvidesConstituent 
:
{ before(grammarAccess.getProvidesConstituentRule()); }
	 ruleProvidesConstituent
{ after(grammarAccess.getProvidesConstituentRule()); } 
	 EOF 
;

// Rule ProvidesConstituent
ruleProvidesConstituent
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getProvidesConstituentAccess().getGroup()); }
(rule__ProvidesConstituent__Group__0)
{ after(grammarAccess.getProvidesConstituentAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRequires
entryRuleRequires 
:
{ before(grammarAccess.getRequiresRule()); }
	 ruleRequires
{ after(grammarAccess.getRequiresRule()); } 
	 EOF 
;

// Rule Requires
ruleRequires
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRequiresAccess().getGroup()); }
(rule__Requires__Group__0)
{ after(grammarAccess.getRequiresAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRequiresConstituent
entryRuleRequiresConstituent 
:
{ before(grammarAccess.getRequiresConstituentRule()); }
	 ruleRequiresConstituent
{ after(grammarAccess.getRequiresConstituentRule()); } 
	 EOF 
;

// Rule RequiresConstituent
ruleRequiresConstituent
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRequiresConstituentAccess().getGroup()); }
(rule__RequiresConstituent__Group__0)
{ after(grammarAccess.getRequiresConstituentAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleProperty
entryRuleProperty 
:
{ before(grammarAccess.getPropertyRule()); }
	 ruleProperty
{ after(grammarAccess.getPropertyRule()); } 
	 EOF 
;

// Rule Property
ruleProperty
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPropertyAccess().getGroup()); }
(rule__Property__Group__0)
{ after(grammarAccess.getPropertyAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCheck
entryRuleCheck 
:
{ before(grammarAccess.getCheckRule()); }
	 ruleCheck
{ after(grammarAccess.getCheckRule()); } 
	 EOF 
;

// Rule Check
ruleCheck
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCheckAccess().getGroup()); }
(rule__Check__Group__0)
{ after(grammarAccess.getCheckAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSystem
entryRuleSystem 
:
{ before(grammarAccess.getSystemRule()); }
	 ruleSystem
{ after(grammarAccess.getSystemRule()); } 
	 EOF 
;

// Rule System
ruleSystem
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSystemAccess().getGroup()); }
(rule__System__Group__0)
{ after(grammarAccess.getSystemAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSystemConstituent
entryRuleSystemConstituent 
:
{ before(grammarAccess.getSystemConstituentRule()); }
	 ruleSystemConstituent
{ after(grammarAccess.getSystemConstituentRule()); } 
	 EOF 
;

// Rule SystemConstituent
ruleSystemConstituent
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSystemConstituentAccess().getAlternatives()); }
(rule__SystemConstituent__Alternatives)
{ after(grammarAccess.getSystemConstituentAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCompositional
entryRuleCompositional 
:
{ before(grammarAccess.getCompositionalRule()); }
	 ruleCompositional
{ after(grammarAccess.getCompositionalRule()); } 
	 EOF 
;

// Rule Compositional
ruleCompositional
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCompositionalAccess().getAlternatives()); }
(rule__Compositional__Alternatives)
{ after(grammarAccess.getCompositionalAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLayer
entryRuleLayer 
:
{ before(grammarAccess.getLayerRule()); }
	 ruleLayer
{ after(grammarAccess.getLayerRule()); } 
	 EOF 
;

// Rule Layer
ruleLayer
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLayerAccess().getGroup()); }
(rule__Layer__Group__0)
{ after(grammarAccess.getLayerAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLayerConstituent
entryRuleLayerConstituent 
:
{ before(grammarAccess.getLayerConstituentRule()); }
	 ruleLayerConstituent
{ after(grammarAccess.getLayerConstituentRule()); } 
	 EOF 
;

// Rule LayerConstituent
ruleLayerConstituent
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLayerConstituentAccess().getAlternatives()); }
(rule__LayerConstituent__Alternatives)
{ after(grammarAccess.getLayerConstituentAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleComponent
entryRuleComponent 
:
{ before(grammarAccess.getComponentRule()); }
	 ruleComponent
{ after(grammarAccess.getComponentRule()); } 
	 EOF 
;

// Rule Component
ruleComponent
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getComponentAccess().getGroup()); }
(rule__Component__Group__0)
{ after(grammarAccess.getComponentAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleConnector
entryRuleConnector 
:
{ before(grammarAccess.getConnectorRule()); }
	 ruleConnector
{ after(grammarAccess.getConnectorRule()); } 
	 EOF 
;

// Rule Connector
ruleConnector
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConnectorAccess().getGroup()); }
(rule__Connector__Group__0)
{ after(grammarAccess.getConnectorAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInstantiableConstituent
entryRuleInstantiableConstituent 
:
{ before(grammarAccess.getInstantiableConstituentRule()); }
	 ruleInstantiableConstituent
{ after(grammarAccess.getInstantiableConstituentRule()); } 
	 EOF 
;

// Rule InstantiableConstituent
ruleInstantiableConstituent
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInstantiableConstituentAccess().getAlternatives()); }
(rule__InstantiableConstituent__Alternatives)
{ after(grammarAccess.getInstantiableConstituentAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLink
entryRuleLink 
:
{ before(grammarAccess.getLinkRule()); }
	 ruleLink
{ after(grammarAccess.getLinkRule()); } 
	 EOF 
;

// Rule Link
ruleLink
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLinkAccess().getGroup()); }
(rule__Link__Group__0)
{ after(grammarAccess.getLinkAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLinkConstituent
entryRuleLinkConstituent 
:
{ before(grammarAccess.getLinkConstituentRule()); }
	 ruleLinkConstituent
{ after(grammarAccess.getLinkConstituentRule()); } 
	 EOF 
;

// Rule LinkConstituent
ruleLinkConstituent
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLinkConstituentAccess().getGroup()); }
(rule__LinkConstituent__Group__0)
{ after(grammarAccess.getLinkConstituentAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLinkConsumerExpression
entryRuleLinkConsumerExpression 
:
{ before(grammarAccess.getLinkConsumerExpressionRule()); }
	 ruleLinkConsumerExpression
{ after(grammarAccess.getLinkConsumerExpressionRule()); } 
	 EOF 
;

// Rule LinkConsumerExpression
ruleLinkConsumerExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLinkConsumerExpressionAccess().getGroup()); }
(rule__LinkConsumerExpression__Group__0)
{ after(grammarAccess.getLinkConsumerExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleLinkProvidersList
entryRuleLinkProvidersList 
:
{ before(grammarAccess.getLinkProvidersListRule()); }
	 ruleLinkProvidersList
{ after(grammarAccess.getLinkProvidersListRule()); } 
	 EOF 
;

// Rule LinkProvidersList
ruleLinkProvidersList
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLinkProvidersListAccess().getGroup()); }
(rule__LinkProvidersList__Group__0)
{ after(grammarAccess.getLinkProvidersListAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLinkProviders
entryRuleLinkProviders 
:
{ before(grammarAccess.getLinkProvidersRule()); }
	 ruleLinkProviders
{ after(grammarAccess.getLinkProvidersRule()); } 
	 EOF 
;

// Rule LinkProviders
ruleLinkProviders
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLinkProvidersAccess().getGroup()); }
(rule__LinkProviders__Group__0)
{ after(grammarAccess.getLinkProvidersAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleAnnotation
entryRuleAnnotation 
:
{ before(grammarAccess.getAnnotationRule()); }
	 ruleAnnotation
{ after(grammarAccess.getAnnotationRule()); } 
	 EOF 
;

// Rule Annotation
ruleAnnotation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAnnotationAccess().getGroup()); }
(rule__Annotation__Group__0)
{ after(grammarAccess.getAnnotationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNameValue
entryRuleNameValue 
:
{ before(grammarAccess.getNameValueRule()); }
	 ruleNameValue
{ after(grammarAccess.getNameValueRule()); } 
	 EOF 
;

// Rule NameValue
ruleNameValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNameValueAccess().getGroup()); }
(rule__NameValue__Group__0)
{ after(grammarAccess.getNameValueAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNameValues
entryRuleNameValues 
:
{ before(grammarAccess.getNameValuesRule()); }
	 ruleNameValues
{ after(grammarAccess.getNameValuesRule()); } 
	 EOF 
;

// Rule NameValues
ruleNameValues
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNameValuesAccess().getGroup()); }
(rule__NameValues__Group__0)
{ after(grammarAccess.getNameValuesAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSupportsClause
entryRuleSupportsClause 
:
{ before(grammarAccess.getSupportsClauseRule()); }
	 ruleSupportsClause
{ after(grammarAccess.getSupportsClauseRule()); } 
	 EOF 
;

// Rule SupportsClause
ruleSupportsClause
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSupportsClauseAccess().getGroup()); }
(rule__SupportsClause__Group__0)
{ after(grammarAccess.getSupportsClauseAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInhibitsClause
entryRuleInhibitsClause 
:
{ before(grammarAccess.getInhibitsClauseRule()); }
	 ruleInhibitsClause
{ after(grammarAccess.getInhibitsClauseRule()); } 
	 EOF 
;

// Rule InhibitsClause
ruleInhibitsClause
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInhibitsClauseAccess().getGroup()); }
(rule__InhibitsClause__Group__0)
{ after(grammarAccess.getInhibitsClauseAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBecauseClause
entryRuleBecauseClause 
:
{ before(grammarAccess.getBecauseClauseRule()); }
	 ruleBecauseClause
{ after(grammarAccess.getBecauseClauseRule()); } 
	 EOF 
;

// Rule BecauseClause
ruleBecauseClause
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBecauseClauseAccess().getGroup()); }
(rule__BecauseClause__Group__0)
{ after(grammarAccess.getBecauseClauseAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBecauseCausalcontext
entryRuleBecauseCausalcontext 
:
{ before(grammarAccess.getBecauseCausalcontextRule()); }
	 ruleBecauseCausalcontext
{ after(grammarAccess.getBecauseCausalcontextRule()); } 
	 EOF 
;

// Rule BecauseCausalcontext
ruleBecauseCausalcontext
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBecauseCausalcontextAccess().getGroup()); }
(rule__BecauseCausalcontext__Group__0)
{ after(grammarAccess.getBecauseCausalcontextAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleParameterList
entryRuleParameterList 
:
{ before(grammarAccess.getParameterListRule()); }
	 ruleParameterList
{ after(grammarAccess.getParameterListRule()); } 
	 EOF 
;

// Rule ParameterList
ruleParameterList
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getParameterListAccess().getGroup()); }
(rule__ParameterList__Group__0)
{ after(grammarAccess.getParameterListAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleArgumentList
entryRuleArgumentList 
:
{ before(grammarAccess.getArgumentListRule()); }
	 ruleArgumentList
{ after(grammarAccess.getArgumentListRule()); } 
	 EOF 
;

// Rule ArgumentList
ruleArgumentList
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getArgumentListAccess().getGroup()); }
(rule__ArgumentList__Group__0)
{ after(grammarAccess.getArgumentListAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExpression
entryRuleExpression 
:
{ before(grammarAccess.getExpressionRule()); }
	 ruleExpression
{ after(grammarAccess.getExpressionRule()); } 
	 EOF 
;

// Rule Expression
ruleExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExpressionAccess().getSubsetofExpressionParserRuleCall()); }
	ruleSubsetofExpression
{ after(grammarAccess.getExpressionAccess().getSubsetofExpressionParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSubsetofExpression
entryRuleSubsetofExpression 
:
{ before(grammarAccess.getSubsetofExpressionRule()); }
	 ruleSubsetofExpression
{ after(grammarAccess.getSubsetofExpressionRule()); } 
	 EOF 
;

// Rule SubsetofExpression
ruleSubsetofExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSubsetofExpressionAccess().getGroup()); }
(rule__SubsetofExpression__Group__0)
{ after(grammarAccess.getSubsetofExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLogicalOrExpression
entryRuleLogicalOrExpression 
:
{ before(grammarAccess.getLogicalOrExpressionRule()); }
	 ruleLogicalOrExpression
{ after(grammarAccess.getLogicalOrExpressionRule()); } 
	 EOF 
;

// Rule LogicalOrExpression
ruleLogicalOrExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLogicalOrExpressionAccess().getGroup()); }
(rule__LogicalOrExpression__Group__0)
{ after(grammarAccess.getLogicalOrExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLogicalAndExpression
entryRuleLogicalAndExpression 
:
{ before(grammarAccess.getLogicalAndExpressionRule()); }
	 ruleLogicalAndExpression
{ after(grammarAccess.getLogicalAndExpressionRule()); } 
	 EOF 
;

// Rule LogicalAndExpression
ruleLogicalAndExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLogicalAndExpressionAccess().getGroup()); }
(rule__LogicalAndExpression__Group__0)
{ after(grammarAccess.getLogicalAndExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBitwiseOrExpression
entryRuleBitwiseOrExpression 
:
{ before(grammarAccess.getBitwiseOrExpressionRule()); }
	 ruleBitwiseOrExpression
{ after(grammarAccess.getBitwiseOrExpressionRule()); } 
	 EOF 
;

// Rule BitwiseOrExpression
ruleBitwiseOrExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBitwiseOrExpressionAccess().getGroup()); }
(rule__BitwiseOrExpression__Group__0)
{ after(grammarAccess.getBitwiseOrExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBitwiseXorExpression
entryRuleBitwiseXorExpression 
:
{ before(grammarAccess.getBitwiseXorExpressionRule()); }
	 ruleBitwiseXorExpression
{ after(grammarAccess.getBitwiseXorExpressionRule()); } 
	 EOF 
;

// Rule BitwiseXorExpression
ruleBitwiseXorExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBitwiseXorExpressionAccess().getGroup()); }
(rule__BitwiseXorExpression__Group__0)
{ after(grammarAccess.getBitwiseXorExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBitwiseAndExpression
entryRuleBitwiseAndExpression 
:
{ before(grammarAccess.getBitwiseAndExpressionRule()); }
	 ruleBitwiseAndExpression
{ after(grammarAccess.getBitwiseAndExpressionRule()); } 
	 EOF 
;

// Rule BitwiseAndExpression
ruleBitwiseAndExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBitwiseAndExpressionAccess().getGroup()); }
(rule__BitwiseAndExpression__Group__0)
{ after(grammarAccess.getBitwiseAndExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEqualityExpression
entryRuleEqualityExpression 
:
{ before(grammarAccess.getEqualityExpressionRule()); }
	 ruleEqualityExpression
{ after(grammarAccess.getEqualityExpressionRule()); } 
	 EOF 
;

// Rule EqualityExpression
ruleEqualityExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEqualityExpressionAccess().getGroup()); }
(rule__EqualityExpression__Group__0)
{ after(grammarAccess.getEqualityExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRelationalExpression
entryRuleRelationalExpression 
:
{ before(grammarAccess.getRelationalExpressionRule()); }
	 ruleRelationalExpression
{ after(grammarAccess.getRelationalExpressionRule()); } 
	 EOF 
;

// Rule RelationalExpression
ruleRelationalExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRelationalExpressionAccess().getGroup()); }
(rule__RelationalExpression__Group__0)
{ after(grammarAccess.getRelationalExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAdditiveExpression
entryRuleAdditiveExpression 
:
{ before(grammarAccess.getAdditiveExpressionRule()); }
	 ruleAdditiveExpression
{ after(grammarAccess.getAdditiveExpressionRule()); } 
	 EOF 
;

// Rule AdditiveExpression
ruleAdditiveExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAdditiveExpressionAccess().getGroup()); }
(rule__AdditiveExpression__Group__0)
{ after(grammarAccess.getAdditiveExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMultiplicativeExpression
entryRuleMultiplicativeExpression 
:
{ before(grammarAccess.getMultiplicativeExpressionRule()); }
	 ruleMultiplicativeExpression
{ after(grammarAccess.getMultiplicativeExpressionRule()); } 
	 EOF 
;

// Rule MultiplicativeExpression
ruleMultiplicativeExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMultiplicativeExpressionAccess().getGroup()); }
(rule__MultiplicativeExpression__Group__0)
{ after(grammarAccess.getMultiplicativeExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleUnaryExpression
entryRuleUnaryExpression 
:
{ before(grammarAccess.getUnaryExpressionRule()); }
	 ruleUnaryExpression
{ after(grammarAccess.getUnaryExpressionRule()); } 
	 EOF 
;

// Rule UnaryExpression
ruleUnaryExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getUnaryExpressionAccess().getGroup()); }
(rule__UnaryExpression__Group__0)
{ after(grammarAccess.getUnaryExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePrimaryExpression
entryRulePrimaryExpression 
:
{ before(grammarAccess.getPrimaryExpressionRule()); }
	 rulePrimaryExpression
{ after(grammarAccess.getPrimaryExpressionRule()); } 
	 EOF 
;

// Rule PrimaryExpression
rulePrimaryExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getAlternatives()); }
(rule__PrimaryExpression__Alternatives)
{ after(grammarAccess.getPrimaryExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMemberExpression
entryRuleMemberExpression 
:
{ before(grammarAccess.getMemberExpressionRule()); }
	 ruleMemberExpression
{ after(grammarAccess.getMemberExpressionRule()); } 
	 EOF 
;

// Rule MemberExpression
ruleMemberExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMemberExpressionAccess().getGroup()); }
(rule__MemberExpression__Group__0)
{ after(grammarAccess.getMemberExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMemberPart
entryRuleMemberPart 
:
{ before(grammarAccess.getMemberPartRule()); }
	 ruleMemberPart
{ after(grammarAccess.getMemberPartRule()); } 
	 EOF 
;

// Rule MemberPart
ruleMemberPart
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMemberPartAccess().getAlternatives()); }
(rule__MemberPart__Alternatives)
{ after(grammarAccess.getMemberPartAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMemberArguments
entryRuleMemberArguments 
:
{ before(grammarAccess.getMemberArgumentsRule()); }
	 ruleMemberArguments
{ after(grammarAccess.getMemberArgumentsRule()); } 
	 EOF 
;

// Rule MemberArguments
ruleMemberArguments
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMemberArgumentsAccess().getGroup()); }
(rule__MemberArguments__Group__0)
{ after(grammarAccess.getMemberArgumentsAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLiteral
entryRuleLiteral 
:
{ before(grammarAccess.getLiteralRule()); }
	 ruleLiteral
{ after(grammarAccess.getLiteralRule()); } 
	 EOF 
;

// Rule Literal
ruleLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLiteralAccess().getAlternatives()); }
(rule__Literal__Alternatives)
{ after(grammarAccess.getLiteralAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSetLiteral
entryRuleSetLiteral 
:
{ before(grammarAccess.getSetLiteralRule()); }
	 ruleSetLiteral
{ after(grammarAccess.getSetLiteralRule()); } 
	 EOF 
;

// Rule SetLiteral
ruleSetLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSetLiteralAccess().getGroup()); }
(rule__SetLiteral__Group__0)
{ after(grammarAccess.getSetLiteralAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleINTEGER_LITERAL
entryRuleINTEGER_LITERAL 
:
{ before(grammarAccess.getINTEGER_LITERALRule()); }
	 ruleINTEGER_LITERAL
{ after(grammarAccess.getINTEGER_LITERALRule()); } 
	 EOF 
;

// Rule INTEGER_LITERAL
ruleINTEGER_LITERAL
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getINTEGER_LITERALAccess().getINTTerminalRuleCall()); }
	RULE_INT
{ after(grammarAccess.getINTEGER_LITERALAccess().getINTTerminalRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleREAL_LITERAL
entryRuleREAL_LITERAL 
:
{ before(grammarAccess.getREAL_LITERALRule()); }
	 ruleREAL_LITERAL
{ after(grammarAccess.getREAL_LITERALRule()); } 
	 EOF 
;

// Rule REAL_LITERAL
ruleREAL_LITERAL
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getREAL_LITERALAccess().getGroup()); }
(rule__REAL_LITERAL__Group__0)
{ after(grammarAccess.getREAL_LITERALAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBOOLEAN_LITERAL
entryRuleBOOLEAN_LITERAL 
:
{ before(grammarAccess.getBOOLEAN_LITERALRule()); }
	 ruleBOOLEAN_LITERAL
{ after(grammarAccess.getBOOLEAN_LITERALRule()); } 
	 EOF 
;

// Rule BOOLEAN_LITERAL
ruleBOOLEAN_LITERAL
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBOOLEAN_LITERALAccess().getAlternatives()); }
(rule__BOOLEAN_LITERAL__Alternatives)
{ after(grammarAccess.getBOOLEAN_LITERALAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__Declaration__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getRequirementOrQualityParserRuleCall_0()); }
	ruleRequirementOrQuality
{ after(grammarAccess.getDeclarationAccess().getRequirementOrQualityParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getDeclarationAccess().getRationaleParserRuleCall_1()); }
	ruleRationale
{ after(grammarAccess.getDeclarationAccess().getRationaleParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getDeclarationAccess().getTemplateParserRuleCall_2()); }
	ruleTemplate
{ after(grammarAccess.getDeclarationAccess().getTemplateParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RequirementOrQuality__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequirementOrQualityAccess().getRequirementParserRuleCall_0()); }
	ruleRequirement
{ after(grammarAccess.getRequirementOrQualityAccess().getRequirementParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getRequirementOrQualityAccess().getQattributeParserRuleCall_1()); }
	ruleQattribute
{ after(grammarAccess.getRequirementOrQualityAccess().getQattributeParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Reason__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReasonAccess().getExpressionAssignment_2_0()); }
(rule__Reason__ExpressionAssignment_2_0)
{ after(grammarAccess.getReasonAccess().getExpressionAssignment_2_0()); }
)

    |(
{ before(grammarAccess.getReasonAccess().getSupportsClauseAssignment_2_1()); }
(rule__Reason__SupportsClauseAssignment_2_1)
{ after(grammarAccess.getReasonAccess().getSupportsClauseAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TemplateConstituent__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemplateConstituentAccess().getTemplateParserRuleCall_0()); }
	ruleTemplate
{ after(grammarAccess.getTemplateConstituentAccess().getTemplateParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getTemplateConstituentAccess().getProvidesParserRuleCall_1()); }
	ruleProvides
{ after(grammarAccess.getTemplateConstituentAccess().getProvidesParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getTemplateConstituentAccess().getRequiresParserRuleCall_2()); }
	ruleRequires
{ after(grammarAccess.getTemplateConstituentAccess().getRequiresParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getTemplateConstituentAccess().getPropertyParserRuleCall_3()); }
	ruleProperty
{ after(grammarAccess.getTemplateConstituentAccess().getPropertyParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getTemplateConstituentAccess().getCheckParserRuleCall_4()); }
	ruleCheck
{ after(grammarAccess.getTemplateConstituentAccess().getCheckParserRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Provides__Alternatives_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProvidesAccess().getGroup_5_0()); }
(rule__Provides__Group_5_0__0)
{ after(grammarAccess.getProvidesAccess().getGroup_5_0()); }
)

    |(
{ before(grammarAccess.getProvidesAccess().getSemicolonKeyword_5_1()); }

	';' 

{ after(grammarAccess.getProvidesAccess().getSemicolonKeyword_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Requires__Alternatives_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequiresAccess().getGroup_4_0()); }
(rule__Requires__Group_4_0__0)
{ after(grammarAccess.getRequiresAccess().getGroup_4_0()); }
)

    |(
{ before(grammarAccess.getRequiresAccess().getSemicolonKeyword_4_1()); }

	';' 

{ after(grammarAccess.getRequiresAccess().getSemicolonKeyword_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SystemConstituent__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSystemConstituentAccess().getCompositionalParserRuleCall_0()); }
	ruleCompositional
{ after(grammarAccess.getSystemConstituentAccess().getCompositionalParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getSystemConstituentAccess().getCheckParserRuleCall_1()); }
	ruleCheck
{ after(grammarAccess.getSystemConstituentAccess().getCheckParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Compositional__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompositionalAccess().getLayerParserRuleCall_0()); }
	ruleLayer
{ after(grammarAccess.getCompositionalAccess().getLayerParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getCompositionalAccess().getComponentParserRuleCall_1()); }
	ruleComponent
{ after(grammarAccess.getCompositionalAccess().getComponentParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getCompositionalAccess().getConnectorParserRuleCall_2()); }
	ruleConnector
{ after(grammarAccess.getCompositionalAccess().getConnectorParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getCompositionalAccess().getLinkParserRuleCall_3()); }
	ruleLink
{ after(grammarAccess.getCompositionalAccess().getLinkParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LayerConstituent__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLayerConstituentAccess().getCompositionalParserRuleCall_0()); }
	ruleCompositional
{ after(grammarAccess.getLayerConstituentAccess().getCompositionalParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getLayerConstituentAccess().getCheckParserRuleCall_1()); }
	ruleCheck
{ after(grammarAccess.getLayerConstituentAccess().getCheckParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Alternatives_8
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentAccess().getGroup_8_0()); }
(rule__Component__Group_8_0__0)
{ after(grammarAccess.getComponentAccess().getGroup_8_0()); }
)

    |(
{ before(grammarAccess.getComponentAccess().getSemicolonKeyword_8_1()); }

	';' 

{ after(grammarAccess.getComponentAccess().getSemicolonKeyword_8_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Connector__Alternatives_8
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConnectorAccess().getGroup_8_0()); }
(rule__Connector__Group_8_0__0)
{ after(grammarAccess.getConnectorAccess().getGroup_8_0()); }
)

    |(
{ before(grammarAccess.getConnectorAccess().getSemicolonKeyword_8_1()); }

	';' 

{ after(grammarAccess.getConnectorAccess().getSemicolonKeyword_8_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InstantiableConstituent__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstantiableConstituentAccess().getCompositionalParserRuleCall_0()); }
	ruleCompositional
{ after(grammarAccess.getInstantiableConstituentAccess().getCompositionalParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getInstantiableConstituentAccess().getCheckParserRuleCall_1()); }
	ruleCheck
{ after(grammarAccess.getInstantiableConstituentAccess().getCheckParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Link__Alternatives_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLinkAccess().getGroup_6_0()); }
(rule__Link__Group_6_0__0)
{ after(grammarAccess.getLinkAccess().getGroup_6_0()); }
)

    |(
{ before(grammarAccess.getLinkAccess().getSemicolonKeyword_6_1()); }

	';' 

{ after(grammarAccess.getLinkAccess().getSemicolonKeyword_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LinkConsumerExpression__RightConsumerAlternatives_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLinkConsumerExpressionAccess().getRightConsumerIDTerminalRuleCall_1_1_0_0()); }
	RULE_ID
{ after(grammarAccess.getLinkConsumerExpressionAccess().getRightConsumerIDTerminalRuleCall_1_1_0_0()); }
)

    |(
{ before(grammarAccess.getLinkConsumerExpressionAccess().getRightConsumerOutKeyword_1_1_0_1()); }

	'out' 

{ after(grammarAccess.getLinkConsumerExpressionAccess().getRightConsumerOutKeyword_1_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LinkProviders__RightProviderAlternatives_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLinkProvidersAccess().getRightProviderIDTerminalRuleCall_1_1_0_0()); }
	RULE_ID
{ after(grammarAccess.getLinkProvidersAccess().getRightProviderIDTerminalRuleCall_1_1_0_0()); }
)

    |(
{ before(grammarAccess.getLinkProvidersAccess().getRightProviderInKeyword_1_1_0_1()); }

	'in' 

{ after(grammarAccess.getLinkProvidersAccess().getRightProviderInKeyword_1_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EqualityExpression__OpAlternatives_1_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEqualityExpressionAccess().getOpEqualsSignEqualsSignKeyword_1_0_0_0()); }

	'==' 

{ after(grammarAccess.getEqualityExpressionAccess().getOpEqualsSignEqualsSignKeyword_1_0_0_0()); }
)

    |(
{ before(grammarAccess.getEqualityExpressionAccess().getOpExclamationMarkEqualsSignKeyword_1_0_0_1()); }

	'!=' 

{ after(grammarAccess.getEqualityExpressionAccess().getOpExclamationMarkEqualsSignKeyword_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__OpAlternatives_1_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalExpressionAccess().getOpGreaterThanSignKeyword_1_0_0_0()); }

	'>' 

{ after(grammarAccess.getRelationalExpressionAccess().getOpGreaterThanSignKeyword_1_0_0_0()); }
)

    |(
{ before(grammarAccess.getRelationalExpressionAccess().getOpLessThanSignKeyword_1_0_0_1()); }

	'<' 

{ after(grammarAccess.getRelationalExpressionAccess().getOpLessThanSignKeyword_1_0_0_1()); }
)

    |(
{ before(grammarAccess.getRelationalExpressionAccess().getOpGreaterThanSignEqualsSignKeyword_1_0_0_2()); }

	'>=' 

{ after(grammarAccess.getRelationalExpressionAccess().getOpGreaterThanSignEqualsSignKeyword_1_0_0_2()); }
)

    |(
{ before(grammarAccess.getRelationalExpressionAccess().getOpLessThanSignEqualsSignKeyword_1_0_0_3()); }

	'<=' 

{ after(grammarAccess.getRelationalExpressionAccess().getOpLessThanSignEqualsSignKeyword_1_0_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__OpAlternatives_1_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditiveExpressionAccess().getOpPlusSignKeyword_1_0_0_0()); }

	'+' 

{ after(grammarAccess.getAdditiveExpressionAccess().getOpPlusSignKeyword_1_0_0_0()); }
)

    |(
{ before(grammarAccess.getAdditiveExpressionAccess().getOpHyphenMinusKeyword_1_0_0_1()); }

	'-' 

{ after(grammarAccess.getAdditiveExpressionAccess().getOpHyphenMinusKeyword_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__OpAlternatives_1_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicativeExpressionAccess().getOpAsteriskKeyword_1_0_0_0()); }

	'*' 

{ after(grammarAccess.getMultiplicativeExpressionAccess().getOpAsteriskKeyword_1_0_0_0()); }
)

    |(
{ before(grammarAccess.getMultiplicativeExpressionAccess().getOpSolidusKeyword_1_0_0_1()); }

	'/' 

{ after(grammarAccess.getMultiplicativeExpressionAccess().getOpSolidusKeyword_1_0_0_1()); }
)

    |(
{ before(grammarAccess.getMultiplicativeExpressionAccess().getOpPercentSignKeyword_1_0_0_2()); }

	'%' 

{ after(grammarAccess.getMultiplicativeExpressionAccess().getOpPercentSignKeyword_1_0_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__OpAlternatives_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExpressionAccess().getOpExclamationMarkKeyword_0_0_0()); }

	'!' 

{ after(grammarAccess.getUnaryExpressionAccess().getOpExclamationMarkKeyword_0_0_0()); }
)

    |(
{ before(grammarAccess.getUnaryExpressionAccess().getOpTildeKeyword_0_0_1()); }

	'~' 

{ after(grammarAccess.getUnaryExpressionAccess().getOpTildeKeyword_0_0_1()); }
)

    |(
{ before(grammarAccess.getUnaryExpressionAccess().getOpPlusSignKeyword_0_0_2()); }

	'+' 

{ after(grammarAccess.getUnaryExpressionAccess().getOpPlusSignKeyword_0_0_2()); }
)

    |(
{ before(grammarAccess.getUnaryExpressionAccess().getOpHyphenMinusKeyword_0_0_3()); }

	'-' 

{ after(grammarAccess.getUnaryExpressionAccess().getOpHyphenMinusKeyword_0_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getGroup_0()); }
(rule__PrimaryExpression__Group_0__0)
{ after(grammarAccess.getPrimaryExpressionAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getPrimaryExpressionAccess().getMemberExpressionParserRuleCall_1()); }
	ruleMemberExpression
{ after(grammarAccess.getPrimaryExpressionAccess().getMemberExpressionParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getPrimaryExpressionAccess().getLiteralParserRuleCall_2()); }
	ruleLiteral
{ after(grammarAccess.getPrimaryExpressionAccess().getLiteralParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MemberPart__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberPartAccess().getNameAssignment_0()); }
(rule__MemberPart__NameAssignment_0)
{ after(grammarAccess.getMemberPartAccess().getNameAssignment_0()); }
)

    |(
{ before(grammarAccess.getMemberPartAccess().getGroup_1()); }
(rule__MemberPart__Group_1__0)
{ after(grammarAccess.getMemberPartAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getMemberPartAccess().getGroup_2()); }
(rule__MemberPart__Group_2__0)
{ after(grammarAccess.getMemberPartAccess().getGroup_2()); }
)

    |(
{ before(grammarAccess.getMemberPartAccess().getGroup_3()); }
(rule__MemberPart__Group_3__0)
{ after(grammarAccess.getMemberPartAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralAccess().getSetLiteralParserRuleCall_0()); }
	ruleSetLiteral
{ after(grammarAccess.getLiteralAccess().getSetLiteralParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getLiteralAccess().getGroup_1()); }
(rule__Literal__Group_1__0)
{ after(grammarAccess.getLiteralAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getLiteralAccess().getGroup_2()); }
(rule__Literal__Group_2__0)
{ after(grammarAccess.getLiteralAccess().getGroup_2()); }
)

    |(
{ before(grammarAccess.getLiteralAccess().getBOOLEAN_LITERALParserRuleCall_3()); }
	ruleBOOLEAN_LITERAL
{ after(grammarAccess.getLiteralAccess().getBOOLEAN_LITERALParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getLiteralAccess().getGroup_4()); }
(rule__Literal__Group_4__0)
{ after(grammarAccess.getLiteralAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BOOLEAN_LITERAL__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBOOLEAN_LITERALAccess().getGroup_0()); }
(rule__BOOLEAN_LITERAL__Group_0__0)
{ after(grammarAccess.getBOOLEAN_LITERALAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getBOOLEAN_LITERALAccess().getGroup_1()); }
(rule__BOOLEAN_LITERAL__Group_1__0)
{ after(grammarAccess.getBOOLEAN_LITERALAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getBOOLEAN_LITERALAccess().getGroup_2()); }
(rule__BOOLEAN_LITERAL__Group_2__0)
{ after(grammarAccess.getBOOLEAN_LITERALAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Architecture__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Architecture__Group__0__Impl
	rule__Architecture__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Architecture__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArchitectureAccess().getAnnotationAssignment_0()); }
(rule__Architecture__AnnotationAssignment_0)*
{ after(grammarAccess.getArchitectureAccess().getAnnotationAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Architecture__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Architecture__Group__1__Impl
	rule__Architecture__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Architecture__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArchitectureAccess().getArchitectureKeyword_1()); }

	'architecture' 

{ after(grammarAccess.getArchitectureAccess().getArchitectureKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Architecture__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Architecture__Group__2__Impl
	rule__Architecture__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Architecture__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArchitectureAccess().getNameAssignment_2()); }
(rule__Architecture__NameAssignment_2)
{ after(grammarAccess.getArchitectureAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Architecture__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Architecture__Group__3__Impl
	rule__Architecture__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Architecture__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArchitectureAccess().getLeftCurlyBracketKeyword_3()); }

	'{' 

{ after(grammarAccess.getArchitectureAccess().getLeftCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Architecture__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Architecture__Group__4__Impl
	rule__Architecture__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Architecture__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArchitectureAccess().getArchitecutrebodyAssignment_4()); }
(rule__Architecture__ArchitecutrebodyAssignment_4)
{ after(grammarAccess.getArchitectureAccess().getArchitecutrebodyAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Architecture__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Architecture__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Architecture__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArchitectureAccess().getRightCurlyBracketKeyword_5()); }

	'}' 

{ after(grammarAccess.getArchitectureAccess().getRightCurlyBracketKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__ArchitectureBody__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArchitectureBody__Group__0__Impl
	rule__ArchitectureBody__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArchitectureBody__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArchitectureBodyAccess().getAnnotationAssignment_0()); }
(rule__ArchitectureBody__AnnotationAssignment_0)*
{ after(grammarAccess.getArchitectureBodyAccess().getAnnotationAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArchitectureBody__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArchitectureBody__Group__1__Impl
	rule__ArchitectureBody__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ArchitectureBody__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArchitectureBodyAccess().getDeclarationStartAssignment_1()); }
(rule__ArchitectureBody__DeclarationStartAssignment_1)
{ after(grammarAccess.getArchitectureBodyAccess().getDeclarationStartAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArchitectureBody__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArchitectureBody__Group__2__Impl
	rule__ArchitectureBody__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ArchitectureBody__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArchitectureBodyAccess().getSystemAssignment_2()); }
(rule__ArchitectureBody__SystemAssignment_2)
{ after(grammarAccess.getArchitectureBodyAccess().getSystemAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArchitectureBody__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArchitectureBody__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArchitectureBody__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArchitectureBodyAccess().getDeclarationEndAssignment_3()); }
(rule__ArchitectureBody__DeclarationEndAssignment_3)
{ after(grammarAccess.getArchitectureBodyAccess().getDeclarationEndAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__DeclarationStart__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DeclarationStart__Group__0__Impl
	rule__DeclarationStart__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclarationStart__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationStartAccess().getDeclarationStartAction_0()); }
(

)
{ after(grammarAccess.getDeclarationStartAccess().getDeclarationStartAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DeclarationStart__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DeclarationStart__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclarationStart__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationStartAccess().getGroup_1()); }
(rule__DeclarationStart__Group_1__0)*
{ after(grammarAccess.getDeclarationStartAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__DeclarationStart__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DeclarationStart__Group_1__0__Impl
	rule__DeclarationStart__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclarationStart__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationStartAccess().getDeclarationAssignment_1_0()); }
(rule__DeclarationStart__DeclarationAssignment_1_0)
{ after(grammarAccess.getDeclarationStartAccess().getDeclarationAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DeclarationStart__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DeclarationStart__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclarationStart__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationStartAccess().getAnnotationAssignment_1_1()); }
(rule__DeclarationStart__AnnotationAssignment_1_1)*
{ after(grammarAccess.getDeclarationStartAccess().getAnnotationAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__DeclarationEnd__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DeclarationEnd__Group__0__Impl
	rule__DeclarationEnd__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclarationEnd__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationEndAccess().getDeclarationEndAction_0()); }
(

)
{ after(grammarAccess.getDeclarationEndAccess().getDeclarationEndAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DeclarationEnd__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DeclarationEnd__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclarationEnd__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationEndAccess().getGroup_1()); }
(rule__DeclarationEnd__Group_1__0)*
{ after(grammarAccess.getDeclarationEndAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__DeclarationEnd__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DeclarationEnd__Group_1__0__Impl
	rule__DeclarationEnd__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclarationEnd__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationEndAccess().getAnnotationAssignment_1_0()); }
(rule__DeclarationEnd__AnnotationAssignment_1_0)*
{ after(grammarAccess.getDeclarationEndAccess().getAnnotationAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DeclarationEnd__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DeclarationEnd__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclarationEnd__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationEndAccess().getDeclarationAssignment_1_1()); }
(rule__DeclarationEnd__DeclarationAssignment_1_1)
{ after(grammarAccess.getDeclarationEndAccess().getDeclarationAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Requirement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Requirement__Group__0__Impl
	rule__Requirement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Requirement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequirementAccess().getRequirementKeyword_0()); }

	'requirement' 

{ after(grammarAccess.getRequirementAccess().getRequirementKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Requirement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Requirement__Group__1__Impl
	rule__Requirement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Requirement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequirementAccess().getNameAssignment_1()); }
(rule__Requirement__NameAssignment_1)
{ after(grammarAccess.getRequirementAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Requirement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Requirement__Group__2__Impl
	rule__Requirement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Requirement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequirementAccess().getGroup_2()); }
(rule__Requirement__Group_2__0)?
{ after(grammarAccess.getRequirementAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Requirement__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Requirement__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Requirement__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequirementAccess().getSemicolonKeyword_3()); }

	';' 

{ after(grammarAccess.getRequirementAccess().getSemicolonKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Requirement__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Requirement__Group_2__0__Impl
	rule__Requirement__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Requirement__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequirementAccess().getEqualsSignKeyword_2_0()); }

	'=' 

{ after(grammarAccess.getRequirementAccess().getEqualsSignKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Requirement__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Requirement__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Requirement__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequirementAccess().getStringLiteralAssignment_2_1()); }
(rule__Requirement__StringLiteralAssignment_2_1)
{ after(grammarAccess.getRequirementAccess().getStringLiteralAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Qattribute__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Qattribute__Group__0__Impl
	rule__Qattribute__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Qattribute__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQattributeAccess().getQuality_attributeKeyword_0()); }

	'quality_attribute' 

{ after(grammarAccess.getQattributeAccess().getQuality_attributeKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Qattribute__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Qattribute__Group__1__Impl
	rule__Qattribute__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Qattribute__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQattributeAccess().getNameAssignment_1()); }
(rule__Qattribute__NameAssignment_1)
{ after(grammarAccess.getQattributeAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Qattribute__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Qattribute__Group__2__Impl
	rule__Qattribute__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Qattribute__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQattributeAccess().getGroup_2()); }
(rule__Qattribute__Group_2__0)?
{ after(grammarAccess.getQattributeAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Qattribute__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Qattribute__Group__3__Impl
	rule__Qattribute__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Qattribute__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQattributeAccess().getSupportsClauseAssignment_3()); }
(rule__Qattribute__SupportsClauseAssignment_3)?
{ after(grammarAccess.getQattributeAccess().getSupportsClauseAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Qattribute__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Qattribute__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Qattribute__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQattributeAccess().getSemicolonKeyword_4()); }

	';' 

{ after(grammarAccess.getQattributeAccess().getSemicolonKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Qattribute__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Qattribute__Group_2__0__Impl
	rule__Qattribute__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Qattribute__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQattributeAccess().getEqualsSignKeyword_2_0()); }

	'=' 

{ after(grammarAccess.getQattributeAccess().getEqualsSignKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Qattribute__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Qattribute__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Qattribute__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQattributeAccess().getExpressionAssignment_2_1()); }
(rule__Qattribute__ExpressionAssignment_2_1)
{ after(grammarAccess.getQattributeAccess().getExpressionAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Rationale__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Rationale__Group__0__Impl
	rule__Rationale__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Rationale__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRationaleAccess().getRationaleKeyword_0()); }

	'rationale' 

{ after(grammarAccess.getRationaleAccess().getRationaleKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Rationale__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Rationale__Group__1__Impl
	rule__Rationale__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Rationale__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRationaleAccess().getNameAssignment_1()); }
(rule__Rationale__NameAssignment_1)
{ after(grammarAccess.getRationaleAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Rationale__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Rationale__Group__2__Impl
	rule__Rationale__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Rationale__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRationaleAccess().getLeftParenthesisKeyword_2()); }

	'(' 

{ after(grammarAccess.getRationaleAccess().getLeftParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Rationale__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Rationale__Group__3__Impl
	rule__Rationale__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Rationale__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRationaleAccess().getParameterListAssignment_3()); }
(rule__Rationale__ParameterListAssignment_3)?
{ after(grammarAccess.getRationaleAccess().getParameterListAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Rationale__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Rationale__Group__4__Impl
	rule__Rationale__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Rationale__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRationaleAccess().getRightParenthesisKeyword_4()); }

	')' 

{ after(grammarAccess.getRationaleAccess().getRightParenthesisKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Rationale__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Rationale__Group__5__Impl
	rule__Rationale__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Rationale__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRationaleAccess().getGroup_5()); }
(rule__Rationale__Group_5__0)?
{ after(grammarAccess.getRationaleAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Rationale__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Rationale__Group__6__Impl
	rule__Rationale__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Rationale__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRationaleAccess().getLeftCurlyBracketKeyword_6()); }

	'{' 

{ after(grammarAccess.getRationaleAccess().getLeftCurlyBracketKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Rationale__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Rationale__Group__7__Impl
	rule__Rationale__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Rationale__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRationaleAccess().getReasonAssignment_7()); }
(rule__Rationale__ReasonAssignment_7)*
{ after(grammarAccess.getRationaleAccess().getReasonAssignment_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Rationale__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Rationale__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Rationale__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRationaleAccess().getRightCurlyBracketKeyword_8()); }

	'}' 

{ after(grammarAccess.getRationaleAccess().getRightCurlyBracketKeyword_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}




















rule__Rationale__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Rationale__Group_5__0__Impl
	rule__Rationale__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Rationale__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRationaleAccess().getExtendsKeyword_5_0()); }

	'extends' 

{ after(grammarAccess.getRationaleAccess().getExtendsKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Rationale__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Rationale__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Rationale__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRationaleAccess().getSuperRationaleAssignment_5_1()); }
(rule__Rationale__SuperRationaleAssignment_5_1)
{ after(grammarAccess.getRationaleAccess().getSuperRationaleAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Reason__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Reason__Group__0__Impl
	rule__Reason__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Reason__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReasonAccess().getReasonAnnotationAssignment_0()); }
(rule__Reason__ReasonAnnotationAssignment_0)*
{ after(grammarAccess.getReasonAccess().getReasonAnnotationAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Reason__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Reason__Group__1__Impl
	rule__Reason__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Reason__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReasonAccess().getReasonKeyword_1()); }

	'reason' 

{ after(grammarAccess.getReasonAccess().getReasonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Reason__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Reason__Group__2__Impl
	rule__Reason__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Reason__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReasonAccess().getAlternatives_2()); }
(rule__Reason__Alternatives_2)
{ after(grammarAccess.getReasonAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Reason__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Reason__Group__3__Impl
	rule__Reason__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Reason__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReasonAccess().getInhibitsClauseAssignment_3()); }
(rule__Reason__InhibitsClauseAssignment_3)?
{ after(grammarAccess.getReasonAccess().getInhibitsClauseAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Reason__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Reason__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Reason__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReasonAccess().getSemicolonKeyword_4()); }

	';' 

{ after(grammarAccess.getReasonAccess().getSemicolonKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Template__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Template__Group__0__Impl
	rule__Template__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Template__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemplateAccess().getTemplateKeyword_0()); }

	'template' 

{ after(grammarAccess.getTemplateAccess().getTemplateKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Template__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Template__Group__1__Impl
	rule__Template__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Template__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemplateAccess().getNameAssignment_1()); }
(rule__Template__NameAssignment_1)
{ after(grammarAccess.getTemplateAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Template__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Template__Group__2__Impl
	rule__Template__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Template__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemplateAccess().getGroup_2()); }
(rule__Template__Group_2__0)?
{ after(grammarAccess.getTemplateAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Template__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Template__Group__3__Impl
	rule__Template__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Template__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemplateAccess().getLeftParenthesisKeyword_3()); }

	'(' 

{ after(grammarAccess.getTemplateAccess().getLeftParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Template__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Template__Group__4__Impl
	rule__Template__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Template__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemplateAccess().getParameterListAssignment_4()); }
(rule__Template__ParameterListAssignment_4)?
{ after(grammarAccess.getTemplateAccess().getParameterListAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Template__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Template__Group__5__Impl
	rule__Template__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Template__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemplateAccess().getRightParenthesisKeyword_5()); }

	')' 

{ after(grammarAccess.getTemplateAccess().getRightParenthesisKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Template__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Template__Group__6__Impl
	rule__Template__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Template__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemplateAccess().getGroup_6()); }
(rule__Template__Group_6__0)?
{ after(grammarAccess.getTemplateAccess().getGroup_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Template__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Template__Group__7__Impl
	rule__Template__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Template__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemplateAccess().getLeftCurlyBracketKeyword_7()); }

	'{' 

{ after(grammarAccess.getTemplateAccess().getLeftCurlyBracketKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Template__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Template__Group__8__Impl
	rule__Template__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Template__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemplateAccess().getGroup_8()); }
(rule__Template__Group_8__0)*
{ after(grammarAccess.getTemplateAccess().getGroup_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Template__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Template__Group__9__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Template__Group__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemplateAccess().getRightCurlyBracketKeyword_9()); }

	'}' 

{ after(grammarAccess.getTemplateAccess().getRightCurlyBracketKeyword_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}






















rule__Template__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Template__Group_2__0__Impl
	rule__Template__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Template__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemplateAccess().getColonKeyword_2_0()); }

	':' 

{ after(grammarAccess.getTemplateAccess().getColonKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Template__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Template__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Template__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemplateAccess().getIntegerLiteralAssignment_2_1()); }
(rule__Template__IntegerLiteralAssignment_2_1)
{ after(grammarAccess.getTemplateAccess().getIntegerLiteralAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Template__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Template__Group_6__0__Impl
	rule__Template__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Template__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemplateAccess().getExtendsKeyword_6_0()); }

	'extends' 

{ after(grammarAccess.getTemplateAccess().getExtendsKeyword_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Template__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Template__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Template__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemplateAccess().getSuperTemplateAssignment_6_1()); }
(rule__Template__SuperTemplateAssignment_6_1)
{ after(grammarAccess.getTemplateAccess().getSuperTemplateAssignment_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Template__Group_8__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Template__Group_8__0__Impl
	rule__Template__Group_8__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Template__Group_8__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemplateAccess().getTemplateAnnotationAssignment_8_0()); }
(rule__Template__TemplateAnnotationAssignment_8_0)*
{ after(grammarAccess.getTemplateAccess().getTemplateAnnotationAssignment_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Template__Group_8__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Template__Group_8__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Template__Group_8__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemplateAccess().getTemplateConstituentAssignment_8_1()); }
(rule__Template__TemplateConstituentAssignment_8_1)
{ after(grammarAccess.getTemplateAccess().getTemplateConstituentAssignment_8_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Provides__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Provides__Group__0__Impl
	rule__Provides__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Provides__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProvidesAccess().getProvidesKeyword_0()); }

	'provides' 

{ after(grammarAccess.getProvidesAccess().getProvidesKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Provides__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Provides__Group__1__Impl
	rule__Provides__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Provides__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProvidesAccess().getNameAssignment_1()); }
(rule__Provides__NameAssignment_1)
{ after(grammarAccess.getProvidesAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Provides__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Provides__Group__2__Impl
	rule__Provides__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Provides__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProvidesAccess().getGroup_2()); }
(rule__Provides__Group_2__0)?
{ after(grammarAccess.getProvidesAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Provides__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Provides__Group__3__Impl
	rule__Provides__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Provides__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProvidesAccess().getTypeAssignment_3()); }
(rule__Provides__TypeAssignment_3)?
{ after(grammarAccess.getProvidesAccess().getTypeAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Provides__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Provides__Group__4__Impl
	rule__Provides__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Provides__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProvidesAccess().getBecauseClauseAssignment_4()); }
(rule__Provides__BecauseClauseAssignment_4)?
{ after(grammarAccess.getProvidesAccess().getBecauseClauseAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Provides__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Provides__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Provides__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProvidesAccess().getAlternatives_5()); }
(rule__Provides__Alternatives_5)
{ after(grammarAccess.getProvidesAccess().getAlternatives_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__Provides__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Provides__Group_2__0__Impl
	rule__Provides__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Provides__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProvidesAccess().getColonKeyword_2_0()); }

	':' 

{ after(grammarAccess.getProvidesAccess().getColonKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Provides__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Provides__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Provides__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProvidesAccess().getValueAssignment_2_1()); }
(rule__Provides__ValueAssignment_2_1)
{ after(grammarAccess.getProvidesAccess().getValueAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Provides__Group_5_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Provides__Group_5_0__0__Impl
	rule__Provides__Group_5_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Provides__Group_5_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProvidesAccess().getLeftCurlyBracketKeyword_5_0_0()); }

	'{' 

{ after(grammarAccess.getProvidesAccess().getLeftCurlyBracketKeyword_5_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Provides__Group_5_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Provides__Group_5_0__1__Impl
	rule__Provides__Group_5_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Provides__Group_5_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProvidesAccess().getProvidesConstituentAssignment_5_0_1()); }
(rule__Provides__ProvidesConstituentAssignment_5_0_1)*
{ after(grammarAccess.getProvidesAccess().getProvidesConstituentAssignment_5_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Provides__Group_5_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Provides__Group_5_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Provides__Group_5_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProvidesAccess().getRightCurlyBracketKeyword_5_0_2()); }

	'}' 

{ after(grammarAccess.getProvidesAccess().getRightCurlyBracketKeyword_5_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ProvidesConstituent__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ProvidesConstituent__Group__0__Impl
	rule__ProvidesConstituent__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ProvidesConstituent__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProvidesConstituentAccess().getProvidesAnnotationAssignment_0()); }
(rule__ProvidesConstituent__ProvidesAnnotationAssignment_0)*
{ after(grammarAccess.getProvidesConstituentAccess().getProvidesAnnotationAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ProvidesConstituent__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ProvidesConstituent__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ProvidesConstituent__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProvidesConstituentAccess().getCheckAssignment_1()); }
(rule__ProvidesConstituent__CheckAssignment_1)
{ after(grammarAccess.getProvidesConstituentAccess().getCheckAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Requires__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Requires__Group__0__Impl
	rule__Requires__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Requires__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequiresAccess().getRequiresKeyword_0()); }

	'requires' 

{ after(grammarAccess.getRequiresAccess().getRequiresKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Requires__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Requires__Group__1__Impl
	rule__Requires__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Requires__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequiresAccess().getTypeAssignment_1()); }
(rule__Requires__TypeAssignment_1)
{ after(grammarAccess.getRequiresAccess().getTypeAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Requires__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Requires__Group__2__Impl
	rule__Requires__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Requires__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequiresAccess().getValueAssignment_2()); }
(rule__Requires__ValueAssignment_2)?
{ after(grammarAccess.getRequiresAccess().getValueAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Requires__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Requires__Group__3__Impl
	rule__Requires__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Requires__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequiresAccess().getBecauseRequiresClauseAssignment_3()); }
(rule__Requires__BecauseRequiresClauseAssignment_3)?
{ after(grammarAccess.getRequiresAccess().getBecauseRequiresClauseAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Requires__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Requires__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Requires__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequiresAccess().getAlternatives_4()); }
(rule__Requires__Alternatives_4)
{ after(grammarAccess.getRequiresAccess().getAlternatives_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Requires__Group_4_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Requires__Group_4_0__0__Impl
	rule__Requires__Group_4_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Requires__Group_4_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequiresAccess().getLeftCurlyBracketKeyword_4_0_0()); }

	'{' 

{ after(grammarAccess.getRequiresAccess().getLeftCurlyBracketKeyword_4_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Requires__Group_4_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Requires__Group_4_0__1__Impl
	rule__Requires__Group_4_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Requires__Group_4_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequiresAccess().getRequiresConstituentAssignment_4_0_1()); }
(rule__Requires__RequiresConstituentAssignment_4_0_1)*
{ after(grammarAccess.getRequiresAccess().getRequiresConstituentAssignment_4_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Requires__Group_4_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Requires__Group_4_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Requires__Group_4_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequiresAccess().getRightCurlyBracketKeyword_4_0_2()); }

	'}' 

{ after(grammarAccess.getRequiresAccess().getRightCurlyBracketKeyword_4_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__RequiresConstituent__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RequiresConstituent__Group__0__Impl
	rule__RequiresConstituent__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RequiresConstituent__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequiresConstituentAccess().getRequiresAnnotationAssignment_0()); }
(rule__RequiresConstituent__RequiresAnnotationAssignment_0)*
{ after(grammarAccess.getRequiresConstituentAccess().getRequiresAnnotationAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RequiresConstituent__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RequiresConstituent__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RequiresConstituent__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequiresConstituentAccess().getCheckAssignment_1()); }
(rule__RequiresConstituent__CheckAssignment_1)
{ after(grammarAccess.getRequiresConstituentAccess().getCheckAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Property__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Property__Group__0__Impl
	rule__Property__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyAccess().getPropertyKeyword_0()); }

	'property' 

{ after(grammarAccess.getPropertyAccess().getPropertyKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Property__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Property__Group__1__Impl
	rule__Property__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyAccess().getNameAssignment_1()); }
(rule__Property__NameAssignment_1)
{ after(grammarAccess.getPropertyAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Property__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Property__Group__2__Impl
	rule__Property__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyAccess().getGroup_2()); }
(rule__Property__Group_2__0)?
{ after(grammarAccess.getPropertyAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Property__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Property__Group__3__Impl
	rule__Property__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyAccess().getBecauseClauseAssignment_3()); }
(rule__Property__BecauseClauseAssignment_3)?
{ after(grammarAccess.getPropertyAccess().getBecauseClauseAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Property__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Property__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyAccess().getSemicolonKeyword_4()); }

	';' 

{ after(grammarAccess.getPropertyAccess().getSemicolonKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Property__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Property__Group_2__0__Impl
	rule__Property__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyAccess().getEqualsSignKeyword_2_0()); }

	'=' 

{ after(grammarAccess.getPropertyAccess().getEqualsSignKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Property__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Property__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyAccess().getExpressionAssignment_2_1()); }
(rule__Property__ExpressionAssignment_2_1)
{ after(grammarAccess.getPropertyAccess().getExpressionAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Check__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Check__Group__0__Impl
	rule__Check__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Check__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCheckAccess().getCheckKeyword_0()); }

	'check' 

{ after(grammarAccess.getCheckAccess().getCheckKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Check__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Check__Group__1__Impl
	rule__Check__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Check__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCheckAccess().getExpressionAssignment_1()); }
(rule__Check__ExpressionAssignment_1)
{ after(grammarAccess.getCheckAccess().getExpressionAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Check__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Check__Group__2__Impl
	rule__Check__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Check__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCheckAccess().getBecauseClauseAssignment_2()); }
(rule__Check__BecauseClauseAssignment_2)?
{ after(grammarAccess.getCheckAccess().getBecauseClauseAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Check__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Check__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Check__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCheckAccess().getSemicolonKeyword_3()); }

	';' 

{ after(grammarAccess.getCheckAccess().getSemicolonKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__System__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__System__Group__0__Impl
	rule__System__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__System__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSystemAccess().getSystemKeyword_0()); }

	'system' 

{ after(grammarAccess.getSystemAccess().getSystemKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__System__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__System__Group__1__Impl
	rule__System__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__System__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSystemAccess().getNameAssignment_1()); }
(rule__System__NameAssignment_1)
{ after(grammarAccess.getSystemAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__System__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__System__Group__2__Impl
	rule__System__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__System__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSystemAccess().getBecauseClauseAssignment_2()); }
(rule__System__BecauseClauseAssignment_2)?
{ after(grammarAccess.getSystemAccess().getBecauseClauseAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__System__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__System__Group__3__Impl
	rule__System__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__System__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSystemAccess().getLeftCurlyBracketKeyword_3()); }

	'{' 

{ after(grammarAccess.getSystemAccess().getLeftCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__System__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__System__Group__4__Impl
	rule__System__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__System__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSystemAccess().getGroup_4()); }
(rule__System__Group_4__0)*
{ after(grammarAccess.getSystemAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__System__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__System__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__System__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSystemAccess().getRightCurlyBracketKeyword_5()); }

	'}' 

{ after(grammarAccess.getSystemAccess().getRightCurlyBracketKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__System__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__System__Group_4__0__Impl
	rule__System__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__System__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSystemAccess().getSystemAnnotationAssignment_4_0()); }
(rule__System__SystemAnnotationAssignment_4_0)*
{ after(grammarAccess.getSystemAccess().getSystemAnnotationAssignment_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__System__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__System__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__System__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSystemAccess().getSystemConstituentAssignment_4_1()); }
(rule__System__SystemConstituentAssignment_4_1)
{ after(grammarAccess.getSystemAccess().getSystemConstituentAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Layer__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Layer__Group__0__Impl
	rule__Layer__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Layer__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLayerAccess().getLayerKeyword_0()); }

	'layer' 

{ after(grammarAccess.getLayerAccess().getLayerKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Layer__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Layer__Group__1__Impl
	rule__Layer__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Layer__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLayerAccess().getNameAssignment_1()); }
(rule__Layer__NameAssignment_1)
{ after(grammarAccess.getLayerAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Layer__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Layer__Group__2__Impl
	rule__Layer__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Layer__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLayerAccess().getGroup_2()); }
(rule__Layer__Group_2__0)?
{ after(grammarAccess.getLayerAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Layer__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Layer__Group__3__Impl
	rule__Layer__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Layer__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLayerAccess().getBecauseClauseAssignment_3()); }
(rule__Layer__BecauseClauseAssignment_3)?
{ after(grammarAccess.getLayerAccess().getBecauseClauseAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Layer__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Layer__Group__4__Impl
	rule__Layer__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Layer__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLayerAccess().getLeftCurlyBracketKeyword_4()); }

	'{' 

{ after(grammarAccess.getLayerAccess().getLeftCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Layer__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Layer__Group__5__Impl
	rule__Layer__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Layer__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLayerAccess().getGroup_5()); }
(rule__Layer__Group_5__0)*
{ after(grammarAccess.getLayerAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Layer__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Layer__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Layer__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLayerAccess().getRightCurlyBracketKeyword_6()); }

	'}' 

{ after(grammarAccess.getLayerAccess().getRightCurlyBracketKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__Layer__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Layer__Group_2__0__Impl
	rule__Layer__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Layer__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLayerAccess().getOverKeyword_2_0()); }

	'over' 

{ after(grammarAccess.getLayerAccess().getOverKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Layer__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Layer__Group_2__1__Impl
	rule__Layer__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Layer__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLayerAccess().getSuperLayerAssignment_2_1()); }
(rule__Layer__SuperLayerAssignment_2_1)
{ after(grammarAccess.getLayerAccess().getSuperLayerAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Layer__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Layer__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Layer__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLayerAccess().getGroup_2_2()); }
(rule__Layer__Group_2_2__0)*
{ after(grammarAccess.getLayerAccess().getGroup_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Layer__Group_2_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Layer__Group_2_2__0__Impl
	rule__Layer__Group_2_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Layer__Group_2_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLayerAccess().getCommaKeyword_2_2_0()); }

	',' 

{ after(grammarAccess.getLayerAccess().getCommaKeyword_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Layer__Group_2_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Layer__Group_2_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Layer__Group_2_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLayerAccess().getSuperLayerAssignment_2_2_1()); }
(rule__Layer__SuperLayerAssignment_2_2_1)
{ after(grammarAccess.getLayerAccess().getSuperLayerAssignment_2_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Layer__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Layer__Group_5__0__Impl
	rule__Layer__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Layer__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLayerAccess().getLayerAnnotationAssignment_5_0()); }
(rule__Layer__LayerAnnotationAssignment_5_0)*
{ after(grammarAccess.getLayerAccess().getLayerAnnotationAssignment_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Layer__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Layer__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Layer__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLayerAccess().getLayerConstituentAssignment_5_1()); }
(rule__Layer__LayerConstituentAssignment_5_1)
{ after(grammarAccess.getLayerAccess().getLayerConstituentAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Component__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Component__Group__0__Impl
	rule__Component__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentAccess().getComponentKeyword_0()); }

	'component' 

{ after(grammarAccess.getComponentAccess().getComponentKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Component__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Component__Group__1__Impl
	rule__Component__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentAccess().getNameAssignment_1()); }
(rule__Component__NameAssignment_1)
{ after(grammarAccess.getComponentAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Component__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Component__Group__2__Impl
	rule__Component__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentAccess().getEqualsSignKeyword_2()); }

	'=' 

{ after(grammarAccess.getComponentAccess().getEqualsSignKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Component__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Component__Group__3__Impl
	rule__Component__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentAccess().getValueAssignment_3()); }
(rule__Component__ValueAssignment_3)
{ after(grammarAccess.getComponentAccess().getValueAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Component__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Component__Group__4__Impl
	rule__Component__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentAccess().getLeftParenthesisKeyword_4()); }

	'(' 

{ after(grammarAccess.getComponentAccess().getLeftParenthesisKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Component__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Component__Group__5__Impl
	rule__Component__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentAccess().getArgumentListAssignment_5()); }
(rule__Component__ArgumentListAssignment_5)?
{ after(grammarAccess.getComponentAccess().getArgumentListAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Component__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Component__Group__6__Impl
	rule__Component__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentAccess().getRightParenthesisKeyword_6()); }

	')' 

{ after(grammarAccess.getComponentAccess().getRightParenthesisKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Component__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Component__Group__7__Impl
	rule__Component__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentAccess().getBecauseClauseAssignment_7()); }
(rule__Component__BecauseClauseAssignment_7)?
{ after(grammarAccess.getComponentAccess().getBecauseClauseAssignment_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Component__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Component__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentAccess().getAlternatives_8()); }
(rule__Component__Alternatives_8)
{ after(grammarAccess.getComponentAccess().getAlternatives_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}




















rule__Component__Group_8_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Component__Group_8_0__0__Impl
	rule__Component__Group_8_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Group_8_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentAccess().getLeftCurlyBracketKeyword_8_0_0()); }

	'{' 

{ after(grammarAccess.getComponentAccess().getLeftCurlyBracketKeyword_8_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Component__Group_8_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Component__Group_8_0__1__Impl
	rule__Component__Group_8_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Group_8_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentAccess().getGroup_8_0_1()); }
(rule__Component__Group_8_0_1__0)*
{ after(grammarAccess.getComponentAccess().getGroup_8_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Component__Group_8_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Component__Group_8_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Group_8_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentAccess().getRightCurlyBracketKeyword_8_0_2()); }

	'}' 

{ after(grammarAccess.getComponentAccess().getRightCurlyBracketKeyword_8_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Component__Group_8_0_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Component__Group_8_0_1__0__Impl
	rule__Component__Group_8_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Group_8_0_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentAccess().getAnnotationAssignment_8_0_1_0()); }
(rule__Component__AnnotationAssignment_8_0_1_0)*
{ after(grammarAccess.getComponentAccess().getAnnotationAssignment_8_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Component__Group_8_0_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Component__Group_8_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Group_8_0_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentAccess().getInstantiableConstituentAssignment_8_0_1_1()); }
(rule__Component__InstantiableConstituentAssignment_8_0_1_1)
{ after(grammarAccess.getComponentAccess().getInstantiableConstituentAssignment_8_0_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Connector__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Connector__Group__0__Impl
	rule__Connector__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Connector__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConnectorAccess().getConnectorKeyword_0()); }

	'connector' 

{ after(grammarAccess.getConnectorAccess().getConnectorKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Connector__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Connector__Group__1__Impl
	rule__Connector__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Connector__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConnectorAccess().getNameAssignment_1()); }
(rule__Connector__NameAssignment_1)
{ after(grammarAccess.getConnectorAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Connector__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Connector__Group__2__Impl
	rule__Connector__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Connector__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConnectorAccess().getEqualsSignKeyword_2()); }

	'=' 

{ after(grammarAccess.getConnectorAccess().getEqualsSignKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Connector__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Connector__Group__3__Impl
	rule__Connector__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Connector__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConnectorAccess().getValueAssignment_3()); }
(rule__Connector__ValueAssignment_3)
{ after(grammarAccess.getConnectorAccess().getValueAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Connector__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Connector__Group__4__Impl
	rule__Connector__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Connector__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConnectorAccess().getLeftParenthesisKeyword_4()); }

	'(' 

{ after(grammarAccess.getConnectorAccess().getLeftParenthesisKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Connector__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Connector__Group__5__Impl
	rule__Connector__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Connector__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConnectorAccess().getArgumentListAssignment_5()); }
(rule__Connector__ArgumentListAssignment_5)?
{ after(grammarAccess.getConnectorAccess().getArgumentListAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Connector__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Connector__Group__6__Impl
	rule__Connector__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Connector__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConnectorAccess().getRightParenthesisKeyword_6()); }

	')' 

{ after(grammarAccess.getConnectorAccess().getRightParenthesisKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Connector__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Connector__Group__7__Impl
	rule__Connector__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Connector__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConnectorAccess().getBecauseClauseAssignment_7()); }
(rule__Connector__BecauseClauseAssignment_7)?
{ after(grammarAccess.getConnectorAccess().getBecauseClauseAssignment_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Connector__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Connector__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Connector__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConnectorAccess().getAlternatives_8()); }
(rule__Connector__Alternatives_8)
{ after(grammarAccess.getConnectorAccess().getAlternatives_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}




















rule__Connector__Group_8_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Connector__Group_8_0__0__Impl
	rule__Connector__Group_8_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Connector__Group_8_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConnectorAccess().getLeftCurlyBracketKeyword_8_0_0()); }

	'{' 

{ after(grammarAccess.getConnectorAccess().getLeftCurlyBracketKeyword_8_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Connector__Group_8_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Connector__Group_8_0__1__Impl
	rule__Connector__Group_8_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Connector__Group_8_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConnectorAccess().getGroup_8_0_1()); }
(rule__Connector__Group_8_0_1__0)*
{ after(grammarAccess.getConnectorAccess().getGroup_8_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Connector__Group_8_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Connector__Group_8_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Connector__Group_8_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConnectorAccess().getRightCurlyBracketKeyword_8_0_2()); }

	'}' 

{ after(grammarAccess.getConnectorAccess().getRightCurlyBracketKeyword_8_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Connector__Group_8_0_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Connector__Group_8_0_1__0__Impl
	rule__Connector__Group_8_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Connector__Group_8_0_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConnectorAccess().getAnnotationAssignment_8_0_1_0()); }
(rule__Connector__AnnotationAssignment_8_0_1_0)*
{ after(grammarAccess.getConnectorAccess().getAnnotationAssignment_8_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Connector__Group_8_0_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Connector__Group_8_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Connector__Group_8_0_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConnectorAccess().getInstantiableConstituentAssignment_8_0_1_1()); }
(rule__Connector__InstantiableConstituentAssignment_8_0_1_1)
{ after(grammarAccess.getConnectorAccess().getInstantiableConstituentAssignment_8_0_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Link__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Link__Group__0__Impl
	rule__Link__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLinkAccess().getLinkKeyword_0()); }

	'link' 

{ after(grammarAccess.getLinkAccess().getLinkKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Link__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Link__Group__1__Impl
	rule__Link__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLinkAccess().getTypeAssignment_1()); }
(rule__Link__TypeAssignment_1)?
{ after(grammarAccess.getLinkAccess().getTypeAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Link__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Link__Group__2__Impl
	rule__Link__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLinkAccess().getLinkConsumerAssignment_2()); }
(rule__Link__LinkConsumerAssignment_2)
{ after(grammarAccess.getLinkAccess().getLinkConsumerAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Link__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Link__Group__3__Impl
	rule__Link__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLinkAccess().getToKeyword_3()); }

	'to' 

{ after(grammarAccess.getLinkAccess().getToKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Link__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Link__Group__4__Impl
	rule__Link__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLinkAccess().getLinkProvidersAssignment_4()); }
(rule__Link__LinkProvidersAssignment_4)
{ after(grammarAccess.getLinkAccess().getLinkProvidersAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Link__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Link__Group__5__Impl
	rule__Link__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLinkAccess().getBecauseClauseAssignment_5()); }
(rule__Link__BecauseClauseAssignment_5)?
{ after(grammarAccess.getLinkAccess().getBecauseClauseAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Link__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Link__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLinkAccess().getAlternatives_6()); }
(rule__Link__Alternatives_6)
{ after(grammarAccess.getLinkAccess().getAlternatives_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__Link__Group_6_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Link__Group_6_0__0__Impl
	rule__Link__Group_6_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__Group_6_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLinkAccess().getLeftCurlyBracketKeyword_6_0_0()); }

	'{' 

{ after(grammarAccess.getLinkAccess().getLeftCurlyBracketKeyword_6_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Link__Group_6_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Link__Group_6_0__1__Impl
	rule__Link__Group_6_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__Group_6_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLinkAccess().getLinkConstituentAssignment_6_0_1()); }
(rule__Link__LinkConstituentAssignment_6_0_1)*
{ after(grammarAccess.getLinkAccess().getLinkConstituentAssignment_6_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Link__Group_6_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Link__Group_6_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__Group_6_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLinkAccess().getRightCurlyBracketKeyword_6_0_2()); }

	'}' 

{ after(grammarAccess.getLinkAccess().getRightCurlyBracketKeyword_6_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__LinkConstituent__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LinkConstituent__Group__0__Impl
	rule__LinkConstituent__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LinkConstituent__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLinkConstituentAccess().getAnnotationAssignment_0()); }
(rule__LinkConstituent__AnnotationAssignment_0)*
{ after(grammarAccess.getLinkConstituentAccess().getAnnotationAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LinkConstituent__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LinkConstituent__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LinkConstituent__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLinkConstituentAccess().getCheckAssignment_1()); }
(rule__LinkConstituent__CheckAssignment_1)
{ after(grammarAccess.getLinkConstituentAccess().getCheckAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__LinkConsumerExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LinkConsumerExpression__Group__0__Impl
	rule__LinkConsumerExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LinkConsumerExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLinkConsumerExpressionAccess().getConsumerAssignment_0()); }
(rule__LinkConsumerExpression__ConsumerAssignment_0)
{ after(grammarAccess.getLinkConsumerExpressionAccess().getConsumerAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LinkConsumerExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LinkConsumerExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LinkConsumerExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLinkConsumerExpressionAccess().getGroup_1()); }
(rule__LinkConsumerExpression__Group_1__0)*
{ after(grammarAccess.getLinkConsumerExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__LinkConsumerExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LinkConsumerExpression__Group_1__0__Impl
	rule__LinkConsumerExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LinkConsumerExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLinkConsumerExpressionAccess().getFullStopKeyword_1_0()); }

	'.' 

{ after(grammarAccess.getLinkConsumerExpressionAccess().getFullStopKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LinkConsumerExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LinkConsumerExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LinkConsumerExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLinkConsumerExpressionAccess().getRightConsumerAssignment_1_1()); }
(rule__LinkConsumerExpression__RightConsumerAssignment_1_1)
{ after(grammarAccess.getLinkConsumerExpressionAccess().getRightConsumerAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__LinkProvidersList__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LinkProvidersList__Group__0__Impl
	rule__LinkProvidersList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LinkProvidersList__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLinkProvidersListAccess().getProvidersAssignment_0()); }
(rule__LinkProvidersList__ProvidersAssignment_0)
{ after(grammarAccess.getLinkProvidersListAccess().getProvidersAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LinkProvidersList__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LinkProvidersList__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LinkProvidersList__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLinkProvidersListAccess().getGroup_1()); }
(rule__LinkProvidersList__Group_1__0)*
{ after(grammarAccess.getLinkProvidersListAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__LinkProvidersList__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LinkProvidersList__Group_1__0__Impl
	rule__LinkProvidersList__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LinkProvidersList__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLinkProvidersListAccess().getCommaKeyword_1_0()); }

	',' 

{ after(grammarAccess.getLinkProvidersListAccess().getCommaKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LinkProvidersList__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LinkProvidersList__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LinkProvidersList__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLinkProvidersListAccess().getProvidersAssignment_1_1()); }
(rule__LinkProvidersList__ProvidersAssignment_1_1)
{ after(grammarAccess.getLinkProvidersListAccess().getProvidersAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__LinkProviders__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LinkProviders__Group__0__Impl
	rule__LinkProviders__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LinkProviders__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLinkProvidersAccess().getProviderAssignment_0()); }
(rule__LinkProviders__ProviderAssignment_0)
{ after(grammarAccess.getLinkProvidersAccess().getProviderAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LinkProviders__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LinkProviders__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LinkProviders__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLinkProvidersAccess().getGroup_1()); }
(rule__LinkProviders__Group_1__0)*
{ after(grammarAccess.getLinkProvidersAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__LinkProviders__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LinkProviders__Group_1__0__Impl
	rule__LinkProviders__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LinkProviders__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLinkProvidersAccess().getFullStopKeyword_1_0()); }

	'.' 

{ after(grammarAccess.getLinkProvidersAccess().getFullStopKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LinkProviders__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LinkProviders__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LinkProviders__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLinkProvidersAccess().getRightProviderAssignment_1_1()); }
(rule__LinkProviders__RightProviderAssignment_1_1)
{ after(grammarAccess.getLinkProvidersAccess().getRightProviderAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Annotation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Annotation__Group__0__Impl
	rule__Annotation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Annotation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationAccess().getCommercialAtKeyword_0()); }

	'@' 

{ after(grammarAccess.getAnnotationAccess().getCommercialAtKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Annotation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Annotation__Group__1__Impl
	rule__Annotation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Annotation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationAccess().getAnnotationAssignment_1()); }
(rule__Annotation__AnnotationAssignment_1)?
{ after(grammarAccess.getAnnotationAccess().getAnnotationAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Annotation__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Annotation__Group__2__Impl
	rule__Annotation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Annotation__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationAccess().getLeftParenthesisKeyword_2()); }

	'(' 

{ after(grammarAccess.getAnnotationAccess().getLeftParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Annotation__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Annotation__Group__3__Impl
	rule__Annotation__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Annotation__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationAccess().getValueAssignment_3()); }
(rule__Annotation__ValueAssignment_3)
{ after(grammarAccess.getAnnotationAccess().getValueAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Annotation__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Annotation__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Annotation__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationAccess().getRightParenthesisKeyword_4()); }

	')' 

{ after(grammarAccess.getAnnotationAccess().getRightParenthesisKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__NameValue__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NameValue__Group__0__Impl
	rule__NameValue__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NameValue__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNameValueAccess().getNamePairAssignment_0()); }
(rule__NameValue__NamePairAssignment_0)
{ after(grammarAccess.getNameValueAccess().getNamePairAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NameValue__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NameValue__Group__1__Impl
	rule__NameValue__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NameValue__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNameValueAccess().getEqualsSignKeyword_1()); }

	'=' 

{ after(grammarAccess.getNameValueAccess().getEqualsSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NameValue__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NameValue__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NameValue__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNameValueAccess().getValuePairAssignment_2()); }
(rule__NameValue__ValuePairAssignment_2)
{ after(grammarAccess.getNameValueAccess().getValuePairAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__NameValues__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NameValues__Group__0__Impl
	rule__NameValues__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NameValues__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNameValuesAccess().getMembersAssignment_0()); }
(rule__NameValues__MembersAssignment_0)
{ after(grammarAccess.getNameValuesAccess().getMembersAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NameValues__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NameValues__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NameValues__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNameValuesAccess().getGroup_1()); }
(rule__NameValues__Group_1__0)*
{ after(grammarAccess.getNameValuesAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__NameValues__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NameValues__Group_1__0__Impl
	rule__NameValues__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NameValues__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNameValuesAccess().getCommaKeyword_1_0()); }

	',' 

{ after(grammarAccess.getNameValuesAccess().getCommaKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NameValues__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NameValues__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NameValues__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNameValuesAccess().getMembersAssignment_1_1()); }
(rule__NameValues__MembersAssignment_1_1)
{ after(grammarAccess.getNameValuesAccess().getMembersAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SupportsClause__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SupportsClause__Group__0__Impl
	rule__SupportsClause__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SupportsClause__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSupportsClauseAccess().getSupportsKeyword_0()); }

	'supports' 

{ after(grammarAccess.getSupportsClauseAccess().getSupportsKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SupportsClause__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SupportsClause__Group__1__Impl
	rule__SupportsClause__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SupportsClause__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSupportsClauseAccess().getValueAssignment_1()); }
(rule__SupportsClause__ValueAssignment_1)
{ after(grammarAccess.getSupportsClauseAccess().getValueAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SupportsClause__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SupportsClause__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SupportsClause__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSupportsClauseAccess().getGroup_2()); }
(rule__SupportsClause__Group_2__0)*
{ after(grammarAccess.getSupportsClauseAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__SupportsClause__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SupportsClause__Group_2__0__Impl
	rule__SupportsClause__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SupportsClause__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSupportsClauseAccess().getCommaKeyword_2_0()); }

	',' 

{ after(grammarAccess.getSupportsClauseAccess().getCommaKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SupportsClause__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SupportsClause__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SupportsClause__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSupportsClauseAccess().getValueAssignment_2_1()); }
(rule__SupportsClause__ValueAssignment_2_1)
{ after(grammarAccess.getSupportsClauseAccess().getValueAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__InhibitsClause__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InhibitsClause__Group__0__Impl
	rule__InhibitsClause__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InhibitsClause__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInhibitsClauseAccess().getInhibitsKeyword_0()); }

	'inhibits' 

{ after(grammarAccess.getInhibitsClauseAccess().getInhibitsKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InhibitsClause__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InhibitsClause__Group__1__Impl
	rule__InhibitsClause__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InhibitsClause__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInhibitsClauseAccess().getValueAssignment_1()); }
(rule__InhibitsClause__ValueAssignment_1)
{ after(grammarAccess.getInhibitsClauseAccess().getValueAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InhibitsClause__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InhibitsClause__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InhibitsClause__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInhibitsClauseAccess().getGroup_2()); }
(rule__InhibitsClause__Group_2__0)*
{ after(grammarAccess.getInhibitsClauseAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__InhibitsClause__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InhibitsClause__Group_2__0__Impl
	rule__InhibitsClause__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InhibitsClause__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInhibitsClauseAccess().getCommaKeyword_2_0()); }

	',' 

{ after(grammarAccess.getInhibitsClauseAccess().getCommaKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InhibitsClause__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InhibitsClause__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InhibitsClause__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInhibitsClauseAccess().getValueAssignment_2_1()); }
(rule__InhibitsClause__ValueAssignment_2_1)
{ after(grammarAccess.getInhibitsClauseAccess().getValueAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__BecauseClause__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BecauseClause__Group__0__Impl
	rule__BecauseClause__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BecauseClause__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBecauseClauseAccess().getBecauseKeyword_0()); }

	'because' 

{ after(grammarAccess.getBecauseClauseAccess().getBecauseKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BecauseClause__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BecauseClause__Group__1__Impl
	rule__BecauseClause__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BecauseClause__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBecauseClauseAccess().getMembersAssignment_1()); }
(rule__BecauseClause__MembersAssignment_1)
{ after(grammarAccess.getBecauseClauseAccess().getMembersAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BecauseClause__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BecauseClause__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BecauseClause__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBecauseClauseAccess().getGroup_2()); }
(rule__BecauseClause__Group_2__0)*
{ after(grammarAccess.getBecauseClauseAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__BecauseClause__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BecauseClause__Group_2__0__Impl
	rule__BecauseClause__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BecauseClause__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBecauseClauseAccess().getCommaKeyword_2_0()); }

	',' 

{ after(grammarAccess.getBecauseClauseAccess().getCommaKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BecauseClause__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BecauseClause__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BecauseClause__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBecauseClauseAccess().getMembersAssignment_2_1()); }
(rule__BecauseClause__MembersAssignment_2_1)
{ after(grammarAccess.getBecauseClauseAccess().getMembersAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__BecauseCausalcontext__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BecauseCausalcontext__Group__0__Impl
	rule__BecauseCausalcontext__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BecauseCausalcontext__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBecauseCausalcontextAccess().getValueAssignment_0()); }
(rule__BecauseCausalcontext__ValueAssignment_0)
{ after(grammarAccess.getBecauseCausalcontextAccess().getValueAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BecauseCausalcontext__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BecauseCausalcontext__Group__1__Impl
	rule__BecauseCausalcontext__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BecauseCausalcontext__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBecauseCausalcontextAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getBecauseCausalcontextAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BecauseCausalcontext__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BecauseCausalcontext__Group__2__Impl
	rule__BecauseCausalcontext__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__BecauseCausalcontext__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBecauseCausalcontextAccess().getArgumentListAssignment_2()); }
(rule__BecauseCausalcontext__ArgumentListAssignment_2)?
{ after(grammarAccess.getBecauseCausalcontextAccess().getArgumentListAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BecauseCausalcontext__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BecauseCausalcontext__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BecauseCausalcontext__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBecauseCausalcontextAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getBecauseCausalcontextAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ParameterList__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParameterList__Group__0__Impl
	rule__ParameterList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterListAccess().getNamesAssignment_0()); }
(rule__ParameterList__NamesAssignment_0)
{ after(grammarAccess.getParameterListAccess().getNamesAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterList__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParameterList__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterListAccess().getGroup_1()); }
(rule__ParameterList__Group_1__0)*
{ after(grammarAccess.getParameterListAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ParameterList__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParameterList__Group_1__0__Impl
	rule__ParameterList__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterListAccess().getCommaKeyword_1_0()); }

	',' 

{ after(grammarAccess.getParameterListAccess().getCommaKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterList__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParameterList__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterListAccess().getNamesAssignment_1_1()); }
(rule__ParameterList__NamesAssignment_1_1)
{ after(grammarAccess.getParameterListAccess().getNamesAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ArgumentList__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArgumentList__Group__0__Impl
	rule__ArgumentList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentList__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgumentListAccess().getMembersAssignment_0()); }
(rule__ArgumentList__MembersAssignment_0)
{ after(grammarAccess.getArgumentListAccess().getMembersAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArgumentList__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArgumentList__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentList__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgumentListAccess().getGroup_1()); }
(rule__ArgumentList__Group_1__0)*
{ after(grammarAccess.getArgumentListAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ArgumentList__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArgumentList__Group_1__0__Impl
	rule__ArgumentList__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentList__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgumentListAccess().getCommaKeyword_1_0()); }

	',' 

{ after(grammarAccess.getArgumentListAccess().getCommaKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArgumentList__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArgumentList__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentList__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgumentListAccess().getMembersAssignment_1_1()); }
(rule__ArgumentList__MembersAssignment_1_1)
{ after(grammarAccess.getArgumentListAccess().getMembersAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SubsetofExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SubsetofExpression__Group__0__Impl
	rule__SubsetofExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SubsetofExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubsetofExpressionAccess().getLogicalOrAssignment_0()); }
(rule__SubsetofExpression__LogicalOrAssignment_0)
{ after(grammarAccess.getSubsetofExpressionAccess().getLogicalOrAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SubsetofExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SubsetofExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SubsetofExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubsetofExpressionAccess().getGroup_1()); }
(rule__SubsetofExpression__Group_1__0)*
{ after(grammarAccess.getSubsetofExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SubsetofExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SubsetofExpression__Group_1__0__Impl
	rule__SubsetofExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SubsetofExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubsetofExpressionAccess().getSubsetofKeyword_1_0()); }

	'subsetof' 

{ after(grammarAccess.getSubsetofExpressionAccess().getSubsetofKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SubsetofExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SubsetofExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SubsetofExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubsetofExpressionAccess().getLogicalOrAssignment_1_1()); }
(rule__SubsetofExpression__LogicalOrAssignment_1_1)
{ after(grammarAccess.getSubsetofExpressionAccess().getLogicalOrAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__LogicalOrExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LogicalOrExpression__Group__0__Impl
	rule__LogicalOrExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalOrExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogicalOrExpressionAccess().getLogicalAndAssignment_0()); }
(rule__LogicalOrExpression__LogicalAndAssignment_0)
{ after(grammarAccess.getLogicalOrExpressionAccess().getLogicalAndAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LogicalOrExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LogicalOrExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalOrExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogicalOrExpressionAccess().getGroup_1()); }
(rule__LogicalOrExpression__Group_1__0)*
{ after(grammarAccess.getLogicalOrExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__LogicalOrExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LogicalOrExpression__Group_1__0__Impl
	rule__LogicalOrExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalOrExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogicalOrExpressionAccess().getVerticalLineVerticalLineKeyword_1_0()); }

	'||' 

{ after(grammarAccess.getLogicalOrExpressionAccess().getVerticalLineVerticalLineKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LogicalOrExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LogicalOrExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalOrExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogicalOrExpressionAccess().getLogicalAndAssignment_1_1()); }
(rule__LogicalOrExpression__LogicalAndAssignment_1_1)
{ after(grammarAccess.getLogicalOrExpressionAccess().getLogicalAndAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__LogicalAndExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LogicalAndExpression__Group__0__Impl
	rule__LogicalAndExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalAndExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogicalAndExpressionAccess().getBitwiseOrAssignment_0()); }
(rule__LogicalAndExpression__BitwiseOrAssignment_0)
{ after(grammarAccess.getLogicalAndExpressionAccess().getBitwiseOrAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LogicalAndExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LogicalAndExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalAndExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogicalAndExpressionAccess().getGroup_1()); }
(rule__LogicalAndExpression__Group_1__0)*
{ after(grammarAccess.getLogicalAndExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__LogicalAndExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LogicalAndExpression__Group_1__0__Impl
	rule__LogicalAndExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalAndExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogicalAndExpressionAccess().getAmpersandAmpersandKeyword_1_0()); }

	'&&' 

{ after(grammarAccess.getLogicalAndExpressionAccess().getAmpersandAmpersandKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LogicalAndExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LogicalAndExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalAndExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogicalAndExpressionAccess().getBitwiseOrAssignment_1_1()); }
(rule__LogicalAndExpression__BitwiseOrAssignment_1_1)
{ after(grammarAccess.getLogicalAndExpressionAccess().getBitwiseOrAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__BitwiseOrExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BitwiseOrExpression__Group__0__Impl
	rule__BitwiseOrExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BitwiseOrExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitwiseOrExpressionAccess().getBitwiseXorAssignment_0()); }
(rule__BitwiseOrExpression__BitwiseXorAssignment_0)
{ after(grammarAccess.getBitwiseOrExpressionAccess().getBitwiseXorAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BitwiseOrExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BitwiseOrExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BitwiseOrExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitwiseOrExpressionAccess().getGroup_1()); }
(rule__BitwiseOrExpression__Group_1__0)*
{ after(grammarAccess.getBitwiseOrExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__BitwiseOrExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BitwiseOrExpression__Group_1__0__Impl
	rule__BitwiseOrExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BitwiseOrExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitwiseOrExpressionAccess().getVerticalLineKeyword_1_0()); }

	'|' 

{ after(grammarAccess.getBitwiseOrExpressionAccess().getVerticalLineKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BitwiseOrExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BitwiseOrExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BitwiseOrExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitwiseOrExpressionAccess().getBitwiseXorAssignment_1_1()); }
(rule__BitwiseOrExpression__BitwiseXorAssignment_1_1)
{ after(grammarAccess.getBitwiseOrExpressionAccess().getBitwiseXorAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__BitwiseXorExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BitwiseXorExpression__Group__0__Impl
	rule__BitwiseXorExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BitwiseXorExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitwiseXorExpressionAccess().getBitwiseAndAssignment_0()); }
(rule__BitwiseXorExpression__BitwiseAndAssignment_0)
{ after(grammarAccess.getBitwiseXorExpressionAccess().getBitwiseAndAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BitwiseXorExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BitwiseXorExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BitwiseXorExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitwiseXorExpressionAccess().getGroup_1()); }
(rule__BitwiseXorExpression__Group_1__0)*
{ after(grammarAccess.getBitwiseXorExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__BitwiseXorExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BitwiseXorExpression__Group_1__0__Impl
	rule__BitwiseXorExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BitwiseXorExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitwiseXorExpressionAccess().getCircumflexAccentKeyword_1_0()); }

	'^' 

{ after(grammarAccess.getBitwiseXorExpressionAccess().getCircumflexAccentKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BitwiseXorExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BitwiseXorExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BitwiseXorExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitwiseXorExpressionAccess().getBitwiseAndAssignment_1_1()); }
(rule__BitwiseXorExpression__BitwiseAndAssignment_1_1)
{ after(grammarAccess.getBitwiseXorExpressionAccess().getBitwiseAndAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__BitwiseAndExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BitwiseAndExpression__Group__0__Impl
	rule__BitwiseAndExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BitwiseAndExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitwiseAndExpressionAccess().getEqualityAssignment_0()); }
(rule__BitwiseAndExpression__EqualityAssignment_0)
{ after(grammarAccess.getBitwiseAndExpressionAccess().getEqualityAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BitwiseAndExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BitwiseAndExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BitwiseAndExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitwiseAndExpressionAccess().getGroup_1()); }
(rule__BitwiseAndExpression__Group_1__0)*
{ after(grammarAccess.getBitwiseAndExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__BitwiseAndExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BitwiseAndExpression__Group_1__0__Impl
	rule__BitwiseAndExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BitwiseAndExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitwiseAndExpressionAccess().getAmpersandKeyword_1_0()); }

	'&' 

{ after(grammarAccess.getBitwiseAndExpressionAccess().getAmpersandKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BitwiseAndExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BitwiseAndExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BitwiseAndExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitwiseAndExpressionAccess().getEqualityAssignment_1_1()); }
(rule__BitwiseAndExpression__EqualityAssignment_1_1)
{ after(grammarAccess.getBitwiseAndExpressionAccess().getEqualityAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__EqualityExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EqualityExpression__Group__0__Impl
	rule__EqualityExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEqualityExpressionAccess().getRelationalAssignment_0()); }
(rule__EqualityExpression__RelationalAssignment_0)
{ after(grammarAccess.getEqualityExpressionAccess().getRelationalAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EqualityExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EqualityExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEqualityExpressionAccess().getGroup_1()); }
(rule__EqualityExpression__Group_1__0)*
{ after(grammarAccess.getEqualityExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__EqualityExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EqualityExpression__Group_1__0__Impl
	rule__EqualityExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEqualityExpressionAccess().getOpAssignment_1_0()); }
(rule__EqualityExpression__OpAssignment_1_0)
{ after(grammarAccess.getEqualityExpressionAccess().getOpAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EqualityExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EqualityExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEqualityExpressionAccess().getRelationalAssignment_1_1()); }
(rule__EqualityExpression__RelationalAssignment_1_1)
{ after(grammarAccess.getEqualityExpressionAccess().getRelationalAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__RelationalExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RelationalExpression__Group__0__Impl
	rule__RelationalExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalExpressionAccess().getAdditiveAssignment_0()); }
(rule__RelationalExpression__AdditiveAssignment_0)
{ after(grammarAccess.getRelationalExpressionAccess().getAdditiveAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RelationalExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RelationalExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalExpressionAccess().getGroup_1()); }
(rule__RelationalExpression__Group_1__0)*
{ after(grammarAccess.getRelationalExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__RelationalExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RelationalExpression__Group_1__0__Impl
	rule__RelationalExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalExpressionAccess().getOpAssignment_1_0()); }
(rule__RelationalExpression__OpAssignment_1_0)
{ after(grammarAccess.getRelationalExpressionAccess().getOpAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RelationalExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RelationalExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalExpressionAccess().getAdditiveAssignment_1_1()); }
(rule__RelationalExpression__AdditiveAssignment_1_1)
{ after(grammarAccess.getRelationalExpressionAccess().getAdditiveAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AdditiveExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AdditiveExpression__Group__0__Impl
	rule__AdditiveExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditiveExpressionAccess().getMultiplicativeAssignment_0()); }
(rule__AdditiveExpression__MultiplicativeAssignment_0)
{ after(grammarAccess.getAdditiveExpressionAccess().getMultiplicativeAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AdditiveExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AdditiveExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditiveExpressionAccess().getGroup_1()); }
(rule__AdditiveExpression__Group_1__0)*
{ after(grammarAccess.getAdditiveExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AdditiveExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AdditiveExpression__Group_1__0__Impl
	rule__AdditiveExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditiveExpressionAccess().getOpAssignment_1_0()); }
(rule__AdditiveExpression__OpAssignment_1_0)
{ after(grammarAccess.getAdditiveExpressionAccess().getOpAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AdditiveExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AdditiveExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditiveExpressionAccess().getMultiplicativeAssignment_1_1()); }
(rule__AdditiveExpression__MultiplicativeAssignment_1_1)
{ after(grammarAccess.getAdditiveExpressionAccess().getMultiplicativeAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MultiplicativeExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultiplicativeExpression__Group__0__Impl
	rule__MultiplicativeExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicativeExpressionAccess().getUnaryAssignment_0()); }
(rule__MultiplicativeExpression__UnaryAssignment_0)
{ after(grammarAccess.getMultiplicativeExpressionAccess().getUnaryAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MultiplicativeExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultiplicativeExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicativeExpressionAccess().getGroup_1()); }
(rule__MultiplicativeExpression__Group_1__0)*
{ after(grammarAccess.getMultiplicativeExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MultiplicativeExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultiplicativeExpression__Group_1__0__Impl
	rule__MultiplicativeExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicativeExpressionAccess().getOpAssignment_1_0()); }
(rule__MultiplicativeExpression__OpAssignment_1_0)
{ after(grammarAccess.getMultiplicativeExpressionAccess().getOpAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MultiplicativeExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultiplicativeExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicativeExpressionAccess().getUnaryAssignment_1_1()); }
(rule__MultiplicativeExpression__UnaryAssignment_1_1)
{ after(grammarAccess.getMultiplicativeExpressionAccess().getUnaryAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__UnaryExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryExpression__Group__0__Impl
	rule__UnaryExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExpressionAccess().getOpAssignment_0()); }
(rule__UnaryExpression__OpAssignment_0)?
{ after(grammarAccess.getUnaryExpressionAccess().getOpAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExpressionAccess().getRightAssignment_1()); }
(rule__UnaryExpression__RightAssignment_1)
{ after(grammarAccess.getUnaryExpressionAccess().getRightAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PrimaryExpression__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_0__0__Impl
	rule__PrimaryExpression__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getLeftParenthesisKeyword_0_0()); }

	'(' 

{ after(grammarAccess.getPrimaryExpressionAccess().getLeftParenthesisKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_0__1__Impl
	rule__PrimaryExpression__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getExpressionParserRuleCall_0_1()); }
	ruleExpression
{ after(grammarAccess.getPrimaryExpressionAccess().getExpressionParserRuleCall_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getRightParenthesisKeyword_0_2()); }

	')' 

{ after(grammarAccess.getPrimaryExpressionAccess().getRightParenthesisKeyword_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__MemberExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MemberExpression__Group__0__Impl
	rule__MemberExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MemberExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberExpressionAccess().getMemberAssignment_0()); }
(rule__MemberExpression__MemberAssignment_0)
{ after(grammarAccess.getMemberExpressionAccess().getMemberAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MemberExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MemberExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MemberExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberExpressionAccess().getGroup_1()); }
(rule__MemberExpression__Group_1__0)*
{ after(grammarAccess.getMemberExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MemberExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MemberExpression__Group_1__0__Impl
	rule__MemberExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MemberExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberExpressionAccess().getFullStopKeyword_1_0()); }

	'.' 

{ after(grammarAccess.getMemberExpressionAccess().getFullStopKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MemberExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MemberExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MemberExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberExpressionAccess().getMemberAssignment_1_1()); }
(rule__MemberExpression__MemberAssignment_1_1)
{ after(grammarAccess.getMemberExpressionAccess().getMemberAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MemberPart__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MemberPart__Group_1__0__Impl
	rule__MemberPart__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MemberPart__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberPartAccess().getNameAssignment_1_0()); }
(rule__MemberPart__NameAssignment_1_0)
{ after(grammarAccess.getMemberPartAccess().getNameAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MemberPart__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MemberPart__Group_1__1__Impl
	rule__MemberPart__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MemberPart__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberPartAccess().getLeftParenthesisKeyword_1_1()); }

	'(' 

{ after(grammarAccess.getMemberPartAccess().getLeftParenthesisKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MemberPart__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MemberPart__Group_1__2__Impl
	rule__MemberPart__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MemberPart__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberPartAccess().getMemberArgumentsAssignment_1_2()); }
(rule__MemberPart__MemberArgumentsAssignment_1_2)
{ after(grammarAccess.getMemberPartAccess().getMemberArgumentsAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MemberPart__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MemberPart__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MemberPart__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberPartAccess().getRightParenthesisKeyword_1_3()); }

	')' 

{ after(grammarAccess.getMemberPartAccess().getRightParenthesisKeyword_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__MemberPart__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MemberPart__Group_2__0__Impl
	rule__MemberPart__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MemberPart__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberPartAccess().getMemberPartAction_2_0()); }
(

)
{ after(grammarAccess.getMemberPartAccess().getMemberPartAction_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MemberPart__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MemberPart__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MemberPart__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberPartAccess().getInKeyword_2_1()); }

	'in' 

{ after(grammarAccess.getMemberPartAccess().getInKeyword_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MemberPart__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MemberPart__Group_3__0__Impl
	rule__MemberPart__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MemberPart__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberPartAccess().getMemberPartAction_3_0()); }
(

)
{ after(grammarAccess.getMemberPartAccess().getMemberPartAction_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MemberPart__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MemberPart__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MemberPart__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberPartAccess().getOutKeyword_3_1()); }

	'out' 

{ after(grammarAccess.getMemberPartAccess().getOutKeyword_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MemberArguments__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MemberArguments__Group__0__Impl
	rule__MemberArguments__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MemberArguments__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberArgumentsAccess().getExpressionAssignment_0()); }
(rule__MemberArguments__ExpressionAssignment_0)
{ after(grammarAccess.getMemberArgumentsAccess().getExpressionAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MemberArguments__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MemberArguments__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MemberArguments__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberArgumentsAccess().getGroup_1()); }
(rule__MemberArguments__Group_1__0)*
{ after(grammarAccess.getMemberArgumentsAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MemberArguments__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MemberArguments__Group_1__0__Impl
	rule__MemberArguments__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MemberArguments__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberArgumentsAccess().getCommaKeyword_1_0()); }

	',' 

{ after(grammarAccess.getMemberArgumentsAccess().getCommaKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MemberArguments__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MemberArguments__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MemberArguments__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberArgumentsAccess().getExpressionAssignment_1_1()); }
(rule__MemberArguments__ExpressionAssignment_1_1)
{ after(grammarAccess.getMemberArgumentsAccess().getExpressionAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Literal__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Literal__Group_1__0__Impl
	rule__Literal__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralAccess().getLiteralAction_1_0()); }
(

)
{ after(grammarAccess.getLiteralAccess().getLiteralAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Literal__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Literal__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralAccess().getINTEGER_LITERALParserRuleCall_1_1()); }
	ruleINTEGER_LITERAL
{ after(grammarAccess.getLiteralAccess().getINTEGER_LITERALParserRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Literal__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Literal__Group_2__0__Impl
	rule__Literal__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralAccess().getLiteralAction_2_0()); }
(

)
{ after(grammarAccess.getLiteralAccess().getLiteralAction_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Literal__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Literal__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralAccess().getREAL_LITERALParserRuleCall_2_1()); }
	ruleREAL_LITERAL
{ after(grammarAccess.getLiteralAccess().getREAL_LITERALParserRuleCall_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Literal__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Literal__Group_4__0__Impl
	rule__Literal__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralAccess().getLiteralAction_4_0()); }
(

)
{ after(grammarAccess.getLiteralAccess().getLiteralAction_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Literal__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Literal__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralAccess().getSTRINGTerminalRuleCall_4_1()); }
	RULE_STRING
{ after(grammarAccess.getLiteralAccess().getSTRINGTerminalRuleCall_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SetLiteral__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SetLiteral__Group__0__Impl
	rule__SetLiteral__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SetLiteral__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSetLiteralAccess().getSetLiteralAction_0()); }
(

)
{ after(grammarAccess.getSetLiteralAccess().getSetLiteralAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SetLiteral__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SetLiteral__Group__1__Impl
	rule__SetLiteral__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SetLiteral__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSetLiteralAccess().getLeftSquareBracketKeyword_1()); }

	'[' 

{ after(grammarAccess.getSetLiteralAccess().getLeftSquareBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SetLiteral__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SetLiteral__Group__2__Impl
	rule__SetLiteral__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SetLiteral__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSetLiteralAccess().getGroup_2()); }
(rule__SetLiteral__Group_2__0)?
{ after(grammarAccess.getSetLiteralAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SetLiteral__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SetLiteral__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SetLiteral__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSetLiteralAccess().getRightSquareBracketKeyword_3()); }

	']' 

{ after(grammarAccess.getSetLiteralAccess().getRightSquareBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__SetLiteral__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SetLiteral__Group_2__0__Impl
	rule__SetLiteral__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SetLiteral__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSetLiteralAccess().getLiteralAssignment_2_0()); }
(rule__SetLiteral__LiteralAssignment_2_0)
{ after(grammarAccess.getSetLiteralAccess().getLiteralAssignment_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SetLiteral__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SetLiteral__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SetLiteral__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSetLiteralAccess().getGroup_2_1()); }
(rule__SetLiteral__Group_2_1__0)*
{ after(grammarAccess.getSetLiteralAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SetLiteral__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SetLiteral__Group_2_1__0__Impl
	rule__SetLiteral__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SetLiteral__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSetLiteralAccess().getCommaKeyword_2_1_0()); }

	',' 

{ after(grammarAccess.getSetLiteralAccess().getCommaKeyword_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SetLiteral__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SetLiteral__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SetLiteral__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSetLiteralAccess().getLiteralAssignment_2_1_1()); }
(rule__SetLiteral__LiteralAssignment_2_1_1)
{ after(grammarAccess.getSetLiteralAccess().getLiteralAssignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__REAL_LITERAL__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__REAL_LITERAL__Group__0__Impl
	rule__REAL_LITERAL__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__REAL_LITERAL__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getREAL_LITERALAccess().getINTTerminalRuleCall_0()); }
(	RULE_INT)*
{ after(grammarAccess.getREAL_LITERALAccess().getINTTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__REAL_LITERAL__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__REAL_LITERAL__Group__1__Impl
	rule__REAL_LITERAL__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__REAL_LITERAL__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getREAL_LITERALAccess().getFullStopKeyword_1()); }

	'.' 

{ after(grammarAccess.getREAL_LITERALAccess().getFullStopKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__REAL_LITERAL__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__REAL_LITERAL__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__REAL_LITERAL__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getREAL_LITERALAccess().getINTTerminalRuleCall_2()); }
	RULE_INT
{ after(grammarAccess.getREAL_LITERALAccess().getINTTerminalRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__BOOLEAN_LITERAL__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BOOLEAN_LITERAL__Group_0__0__Impl
	rule__BOOLEAN_LITERAL__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BOOLEAN_LITERAL__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBOOLEAN_LITERALAccess().getBOOLEAN_LITERALAction_0_0()); }
(

)
{ after(grammarAccess.getBOOLEAN_LITERALAccess().getBOOLEAN_LITERALAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BOOLEAN_LITERAL__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BOOLEAN_LITERAL__Group_0__1__Impl
	rule__BOOLEAN_LITERAL__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BOOLEAN_LITERAL__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBOOLEAN_LITERALAccess().getNumberSignKeyword_0_1()); }

	'#' 

{ after(grammarAccess.getBOOLEAN_LITERALAccess().getNumberSignKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BOOLEAN_LITERAL__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BOOLEAN_LITERAL__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BOOLEAN_LITERAL__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBOOLEAN_LITERALAccess().getSTRINGTerminalRuleCall_0_2()); }
	RULE_STRING
{ after(grammarAccess.getBOOLEAN_LITERALAccess().getSTRINGTerminalRuleCall_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__BOOLEAN_LITERAL__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BOOLEAN_LITERAL__Group_1__0__Impl
	rule__BOOLEAN_LITERAL__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BOOLEAN_LITERAL__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBOOLEAN_LITERALAccess().getBOOLEAN_LITERALAction_1_0()); }
(

)
{ after(grammarAccess.getBOOLEAN_LITERALAccess().getBOOLEAN_LITERALAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BOOLEAN_LITERAL__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BOOLEAN_LITERAL__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BOOLEAN_LITERAL__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBOOLEAN_LITERALAccess().getTrueKeyword_1_1()); }

	'true' 

{ after(grammarAccess.getBOOLEAN_LITERALAccess().getTrueKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__BOOLEAN_LITERAL__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BOOLEAN_LITERAL__Group_2__0__Impl
	rule__BOOLEAN_LITERAL__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BOOLEAN_LITERAL__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBOOLEAN_LITERALAccess().getBOOLEAN_LITERALAction_2_0()); }
(

)
{ after(grammarAccess.getBOOLEAN_LITERALAccess().getBOOLEAN_LITERALAction_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BOOLEAN_LITERAL__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BOOLEAN_LITERAL__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BOOLEAN_LITERAL__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBOOLEAN_LITERALAccess().getFalseKeyword_2_1()); }

	'false' 

{ after(grammarAccess.getBOOLEAN_LITERALAccess().getFalseKeyword_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__GraspSpecification__ArchitectureAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGraspSpecificationAccess().getArchitectureArchitectureParserRuleCall_0()); }
	ruleArchitecture{ after(grammarAccess.getGraspSpecificationAccess().getArchitectureArchitectureParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Architecture__AnnotationAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArchitectureAccess().getAnnotationAnnotationParserRuleCall_0_0()); }
	ruleAnnotation{ after(grammarAccess.getArchitectureAccess().getAnnotationAnnotationParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Architecture__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArchitectureAccess().getNameIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getArchitectureAccess().getNameIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Architecture__ArchitecutrebodyAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArchitectureAccess().getArchitecutrebodyArchitectureBodyParserRuleCall_4_0()); }
	ruleArchitectureBody{ after(grammarAccess.getArchitectureAccess().getArchitecutrebodyArchitectureBodyParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArchitectureBody__AnnotationAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArchitectureBodyAccess().getAnnotationAnnotationParserRuleCall_0_0()); }
	ruleAnnotation{ after(grammarAccess.getArchitectureBodyAccess().getAnnotationAnnotationParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArchitectureBody__DeclarationStartAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArchitectureBodyAccess().getDeclarationStartDeclarationStartParserRuleCall_1_0()); }
	ruleDeclarationStart{ after(grammarAccess.getArchitectureBodyAccess().getDeclarationStartDeclarationStartParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArchitectureBody__SystemAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArchitectureBodyAccess().getSystemSystemParserRuleCall_2_0()); }
	ruleSystem{ after(grammarAccess.getArchitectureBodyAccess().getSystemSystemParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArchitectureBody__DeclarationEndAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArchitectureBodyAccess().getDeclarationEndDeclarationEndParserRuleCall_3_0()); }
	ruleDeclarationEnd{ after(grammarAccess.getArchitectureBodyAccess().getDeclarationEndDeclarationEndParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DeclarationStart__DeclarationAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationStartAccess().getDeclarationDeclarationParserRuleCall_1_0_0()); }
	ruleDeclaration{ after(grammarAccess.getDeclarationStartAccess().getDeclarationDeclarationParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DeclarationStart__AnnotationAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationStartAccess().getAnnotationAnnotationParserRuleCall_1_1_0()); }
	ruleAnnotation{ after(grammarAccess.getDeclarationStartAccess().getAnnotationAnnotationParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DeclarationEnd__AnnotationAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationEndAccess().getAnnotationAnnotationParserRuleCall_1_0_0()); }
	ruleAnnotation{ after(grammarAccess.getDeclarationEndAccess().getAnnotationAnnotationParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DeclarationEnd__DeclarationAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationEndAccess().getDeclarationDeclarationParserRuleCall_1_1_0()); }
	ruleDeclaration{ after(grammarAccess.getDeclarationEndAccess().getDeclarationDeclarationParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Requirement__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequirementAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getRequirementAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Requirement__StringLiteralAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequirementAccess().getStringLiteralSTRINGTerminalRuleCall_2_1_0()); }
	RULE_STRING{ after(grammarAccess.getRequirementAccess().getStringLiteralSTRINGTerminalRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Qattribute__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQattributeAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getQattributeAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Qattribute__ExpressionAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQattributeAccess().getExpressionExpressionParserRuleCall_2_1_0()); }
	ruleExpression{ after(grammarAccess.getQattributeAccess().getExpressionExpressionParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Qattribute__SupportsClauseAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQattributeAccess().getSupportsClauseSupportsClauseParserRuleCall_3_0()); }
	ruleSupportsClause{ after(grammarAccess.getQattributeAccess().getSupportsClauseSupportsClauseParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Rationale__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRationaleAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getRationaleAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Rationale__ParameterListAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRationaleAccess().getParameterListParameterListParserRuleCall_3_0()); }
	ruleParameterList{ after(grammarAccess.getRationaleAccess().getParameterListParameterListParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Rationale__SuperRationaleAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRationaleAccess().getSuperRationaleRationaleCrossReference_5_1_0()); }
(
{ before(grammarAccess.getRationaleAccess().getSuperRationaleRationaleIDTerminalRuleCall_5_1_0_1()); }
	RULE_ID{ after(grammarAccess.getRationaleAccess().getSuperRationaleRationaleIDTerminalRuleCall_5_1_0_1()); }
)
{ after(grammarAccess.getRationaleAccess().getSuperRationaleRationaleCrossReference_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Rationale__ReasonAssignment_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRationaleAccess().getReasonReasonParserRuleCall_7_0()); }
	ruleReason{ after(grammarAccess.getRationaleAccess().getReasonReasonParserRuleCall_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Reason__ReasonAnnotationAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReasonAccess().getReasonAnnotationAnnotationParserRuleCall_0_0()); }
	ruleAnnotation{ after(grammarAccess.getReasonAccess().getReasonAnnotationAnnotationParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Reason__ExpressionAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReasonAccess().getExpressionExpressionParserRuleCall_2_0_0()); }
	ruleExpression{ after(grammarAccess.getReasonAccess().getExpressionExpressionParserRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Reason__SupportsClauseAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReasonAccess().getSupportsClauseSupportsClauseParserRuleCall_2_1_0()); }
	ruleSupportsClause{ after(grammarAccess.getReasonAccess().getSupportsClauseSupportsClauseParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Reason__InhibitsClauseAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReasonAccess().getInhibitsClauseInhibitsClauseParserRuleCall_3_0()); }
	ruleInhibitsClause{ after(grammarAccess.getReasonAccess().getInhibitsClauseInhibitsClauseParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Template__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemplateAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getTemplateAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Template__IntegerLiteralAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemplateAccess().getIntegerLiteralINTEGER_LITERALParserRuleCall_2_1_0()); }
	ruleINTEGER_LITERAL{ after(grammarAccess.getTemplateAccess().getIntegerLiteralINTEGER_LITERALParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Template__ParameterListAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemplateAccess().getParameterListParameterListParserRuleCall_4_0()); }
	ruleParameterList{ after(grammarAccess.getTemplateAccess().getParameterListParameterListParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Template__SuperTemplateAssignment_6_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemplateAccess().getSuperTemplateTemplateCrossReference_6_1_0()); }
(
{ before(grammarAccess.getTemplateAccess().getSuperTemplateTemplateIDTerminalRuleCall_6_1_0_1()); }
	RULE_ID{ after(grammarAccess.getTemplateAccess().getSuperTemplateTemplateIDTerminalRuleCall_6_1_0_1()); }
)
{ after(grammarAccess.getTemplateAccess().getSuperTemplateTemplateCrossReference_6_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Template__TemplateAnnotationAssignment_8_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemplateAccess().getTemplateAnnotationAnnotationParserRuleCall_8_0_0()); }
	ruleAnnotation{ after(grammarAccess.getTemplateAccess().getTemplateAnnotationAnnotationParserRuleCall_8_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Template__TemplateConstituentAssignment_8_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemplateAccess().getTemplateConstituentTemplateConstituentParserRuleCall_8_1_0()); }
	ruleTemplateConstituent{ after(grammarAccess.getTemplateAccess().getTemplateConstituentTemplateConstituentParserRuleCall_8_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Provides__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProvidesAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getProvidesAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Provides__ValueAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProvidesAccess().getValueINTEGER_LITERALParserRuleCall_2_1_0()); }
	ruleINTEGER_LITERAL{ after(grammarAccess.getProvidesAccess().getValueINTEGER_LITERALParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Provides__TypeAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProvidesAccess().getTypeIDTerminalRuleCall_3_0()); }
	RULE_ID{ after(grammarAccess.getProvidesAccess().getTypeIDTerminalRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Provides__BecauseClauseAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProvidesAccess().getBecauseClauseBecauseClauseParserRuleCall_4_0()); }
	ruleBecauseClause{ after(grammarAccess.getProvidesAccess().getBecauseClauseBecauseClauseParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Provides__ProvidesConstituentAssignment_5_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProvidesAccess().getProvidesConstituentProvidesConstituentParserRuleCall_5_0_1_0()); }
	ruleProvidesConstituent{ after(grammarAccess.getProvidesAccess().getProvidesConstituentProvidesConstituentParserRuleCall_5_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ProvidesConstituent__ProvidesAnnotationAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProvidesConstituentAccess().getProvidesAnnotationAnnotationParserRuleCall_0_0()); }
	ruleAnnotation{ after(grammarAccess.getProvidesConstituentAccess().getProvidesAnnotationAnnotationParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ProvidesConstituent__CheckAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProvidesConstituentAccess().getCheckCheckParserRuleCall_1_0()); }
	ruleCheck{ after(grammarAccess.getProvidesConstituentAccess().getCheckCheckParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Requires__TypeAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequiresAccess().getTypeIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getRequiresAccess().getTypeIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Requires__ValueAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequiresAccess().getValueIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getRequiresAccess().getValueIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Requires__BecauseRequiresClauseAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequiresAccess().getBecauseRequiresClauseBecauseClauseParserRuleCall_3_0()); }
	ruleBecauseClause{ after(grammarAccess.getRequiresAccess().getBecauseRequiresClauseBecauseClauseParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Requires__RequiresConstituentAssignment_4_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequiresAccess().getRequiresConstituentRequiresConstituentParserRuleCall_4_0_1_0()); }
	ruleRequiresConstituent{ after(grammarAccess.getRequiresAccess().getRequiresConstituentRequiresConstituentParserRuleCall_4_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RequiresConstituent__RequiresAnnotationAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequiresConstituentAccess().getRequiresAnnotationAnnotationParserRuleCall_0_0()); }
	ruleAnnotation{ after(grammarAccess.getRequiresConstituentAccess().getRequiresAnnotationAnnotationParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RequiresConstituent__CheckAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequiresConstituentAccess().getCheckCheckParserRuleCall_1_0()); }
	ruleCheck{ after(grammarAccess.getRequiresConstituentAccess().getCheckCheckParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Property__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getPropertyAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Property__ExpressionAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyAccess().getExpressionExpressionParserRuleCall_2_1_0()); }
	ruleExpression{ after(grammarAccess.getPropertyAccess().getExpressionExpressionParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Property__BecauseClauseAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyAccess().getBecauseClauseBecauseClauseParserRuleCall_3_0()); }
	ruleBecauseClause{ after(grammarAccess.getPropertyAccess().getBecauseClauseBecauseClauseParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Check__ExpressionAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCheckAccess().getExpressionExpressionParserRuleCall_1_0()); }
	ruleExpression{ after(grammarAccess.getCheckAccess().getExpressionExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Check__BecauseClauseAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCheckAccess().getBecauseClauseBecauseClauseParserRuleCall_2_0()); }
	ruleBecauseClause{ after(grammarAccess.getCheckAccess().getBecauseClauseBecauseClauseParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__System__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSystemAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getSystemAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__System__BecauseClauseAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSystemAccess().getBecauseClauseBecauseClauseParserRuleCall_2_0()); }
	ruleBecauseClause{ after(grammarAccess.getSystemAccess().getBecauseClauseBecauseClauseParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__System__SystemAnnotationAssignment_4_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSystemAccess().getSystemAnnotationAnnotationParserRuleCall_4_0_0()); }
	ruleAnnotation{ after(grammarAccess.getSystemAccess().getSystemAnnotationAnnotationParserRuleCall_4_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__System__SystemConstituentAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSystemAccess().getSystemConstituentSystemConstituentParserRuleCall_4_1_0()); }
	ruleSystemConstituent{ after(grammarAccess.getSystemAccess().getSystemConstituentSystemConstituentParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Layer__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLayerAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getLayerAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Layer__SuperLayerAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLayerAccess().getSuperLayerLayerCrossReference_2_1_0()); }
(
{ before(grammarAccess.getLayerAccess().getSuperLayerLayerIDTerminalRuleCall_2_1_0_1()); }
	RULE_ID{ after(grammarAccess.getLayerAccess().getSuperLayerLayerIDTerminalRuleCall_2_1_0_1()); }
)
{ after(grammarAccess.getLayerAccess().getSuperLayerLayerCrossReference_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Layer__SuperLayerAssignment_2_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLayerAccess().getSuperLayerLayerCrossReference_2_2_1_0()); }
(
{ before(grammarAccess.getLayerAccess().getSuperLayerLayerIDTerminalRuleCall_2_2_1_0_1()); }
	RULE_ID{ after(grammarAccess.getLayerAccess().getSuperLayerLayerIDTerminalRuleCall_2_2_1_0_1()); }
)
{ after(grammarAccess.getLayerAccess().getSuperLayerLayerCrossReference_2_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Layer__BecauseClauseAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLayerAccess().getBecauseClauseBecauseClauseParserRuleCall_3_0()); }
	ruleBecauseClause{ after(grammarAccess.getLayerAccess().getBecauseClauseBecauseClauseParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Layer__LayerAnnotationAssignment_5_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLayerAccess().getLayerAnnotationAnnotationParserRuleCall_5_0_0()); }
	ruleAnnotation{ after(grammarAccess.getLayerAccess().getLayerAnnotationAnnotationParserRuleCall_5_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Layer__LayerConstituentAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLayerAccess().getLayerConstituentLayerConstituentParserRuleCall_5_1_0()); }
	ruleLayerConstituent{ after(grammarAccess.getLayerAccess().getLayerConstituentLayerConstituentParserRuleCall_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Component__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getComponentAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Component__ValueAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentAccess().getValueTemplateCrossReference_3_0()); }
(
{ before(grammarAccess.getComponentAccess().getValueTemplateIDTerminalRuleCall_3_0_1()); }
	RULE_ID{ after(grammarAccess.getComponentAccess().getValueTemplateIDTerminalRuleCall_3_0_1()); }
)
{ after(grammarAccess.getComponentAccess().getValueTemplateCrossReference_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Component__ArgumentListAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentAccess().getArgumentListArgumentListParserRuleCall_5_0()); }
	ruleArgumentList{ after(grammarAccess.getComponentAccess().getArgumentListArgumentListParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Component__BecauseClauseAssignment_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentAccess().getBecauseClauseBecauseClauseParserRuleCall_7_0()); }
	ruleBecauseClause{ after(grammarAccess.getComponentAccess().getBecauseClauseBecauseClauseParserRuleCall_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Component__AnnotationAssignment_8_0_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentAccess().getAnnotationAnnotationParserRuleCall_8_0_1_0_0()); }
	ruleAnnotation{ after(grammarAccess.getComponentAccess().getAnnotationAnnotationParserRuleCall_8_0_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Component__InstantiableConstituentAssignment_8_0_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentAccess().getInstantiableConstituentInstantiableConstituentParserRuleCall_8_0_1_1_0()); }
	ruleInstantiableConstituent{ after(grammarAccess.getComponentAccess().getInstantiableConstituentInstantiableConstituentParserRuleCall_8_0_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Connector__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConnectorAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getConnectorAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Connector__ValueAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConnectorAccess().getValueTemplateCrossReference_3_0()); }
(
{ before(grammarAccess.getConnectorAccess().getValueTemplateIDTerminalRuleCall_3_0_1()); }
	RULE_ID{ after(grammarAccess.getConnectorAccess().getValueTemplateIDTerminalRuleCall_3_0_1()); }
)
{ after(grammarAccess.getConnectorAccess().getValueTemplateCrossReference_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Connector__ArgumentListAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConnectorAccess().getArgumentListArgumentListParserRuleCall_5_0()); }
	ruleArgumentList{ after(grammarAccess.getConnectorAccess().getArgumentListArgumentListParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Connector__BecauseClauseAssignment_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConnectorAccess().getBecauseClauseBecauseClauseParserRuleCall_7_0()); }
	ruleBecauseClause{ after(grammarAccess.getConnectorAccess().getBecauseClauseBecauseClauseParserRuleCall_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Connector__AnnotationAssignment_8_0_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConnectorAccess().getAnnotationAnnotationParserRuleCall_8_0_1_0_0()); }
	ruleAnnotation{ after(grammarAccess.getConnectorAccess().getAnnotationAnnotationParserRuleCall_8_0_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Connector__InstantiableConstituentAssignment_8_0_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConnectorAccess().getInstantiableConstituentInstantiableConstituentParserRuleCall_8_0_1_1_0()); }
	ruleInstantiableConstituent{ after(grammarAccess.getConnectorAccess().getInstantiableConstituentInstantiableConstituentParserRuleCall_8_0_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Link__TypeAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLinkAccess().getTypeIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getLinkAccess().getTypeIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Link__LinkConsumerAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLinkAccess().getLinkConsumerLinkConsumerExpressionParserRuleCall_2_0()); }
	ruleLinkConsumerExpression{ after(grammarAccess.getLinkAccess().getLinkConsumerLinkConsumerExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Link__LinkProvidersAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLinkAccess().getLinkProvidersLinkProvidersListParserRuleCall_4_0()); }
	ruleLinkProvidersList{ after(grammarAccess.getLinkAccess().getLinkProvidersLinkProvidersListParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Link__BecauseClauseAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLinkAccess().getBecauseClauseBecauseClauseParserRuleCall_5_0()); }
	ruleBecauseClause{ after(grammarAccess.getLinkAccess().getBecauseClauseBecauseClauseParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Link__LinkConstituentAssignment_6_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLinkAccess().getLinkConstituentLinkConstituentParserRuleCall_6_0_1_0()); }
	ruleLinkConstituent{ after(grammarAccess.getLinkAccess().getLinkConstituentLinkConstituentParserRuleCall_6_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LinkConstituent__AnnotationAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLinkConstituentAccess().getAnnotationAnnotationParserRuleCall_0_0()); }
	ruleAnnotation{ after(grammarAccess.getLinkConstituentAccess().getAnnotationAnnotationParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LinkConstituent__CheckAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLinkConstituentAccess().getCheckCheckParserRuleCall_1_0()); }
	ruleCheck{ after(grammarAccess.getLinkConstituentAccess().getCheckCheckParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LinkConsumerExpression__ConsumerAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLinkConsumerExpressionAccess().getConsumerLinkConsumerPartCrossReference_0_0()); }
(
{ before(grammarAccess.getLinkConsumerExpressionAccess().getConsumerLinkConsumerPartIDTerminalRuleCall_0_0_1()); }
	RULE_ID{ after(grammarAccess.getLinkConsumerExpressionAccess().getConsumerLinkConsumerPartIDTerminalRuleCall_0_0_1()); }
)
{ after(grammarAccess.getLinkConsumerExpressionAccess().getConsumerLinkConsumerPartCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LinkConsumerExpression__RightConsumerAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLinkConsumerExpressionAccess().getRightConsumerAlternatives_1_1_0()); }
(rule__LinkConsumerExpression__RightConsumerAlternatives_1_1_0)
{ after(grammarAccess.getLinkConsumerExpressionAccess().getRightConsumerAlternatives_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LinkProvidersList__ProvidersAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLinkProvidersListAccess().getProvidersLinkProvidersParserRuleCall_0_0()); }
	ruleLinkProviders{ after(grammarAccess.getLinkProvidersListAccess().getProvidersLinkProvidersParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LinkProvidersList__ProvidersAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLinkProvidersListAccess().getProvidersLinkProvidersParserRuleCall_1_1_0()); }
	ruleLinkProviders{ after(grammarAccess.getLinkProvidersListAccess().getProvidersLinkProvidersParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LinkProviders__ProviderAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLinkProvidersAccess().getProviderLinkProviderPartCrossReference_0_0()); }
(
{ before(grammarAccess.getLinkProvidersAccess().getProviderLinkProviderPartIDTerminalRuleCall_0_0_1()); }
	RULE_ID{ after(grammarAccess.getLinkProvidersAccess().getProviderLinkProviderPartIDTerminalRuleCall_0_0_1()); }
)
{ after(grammarAccess.getLinkProvidersAccess().getProviderLinkProviderPartCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LinkProviders__RightProviderAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLinkProvidersAccess().getRightProviderAlternatives_1_1_0()); }
(rule__LinkProviders__RightProviderAlternatives_1_1_0)
{ after(grammarAccess.getLinkProvidersAccess().getRightProviderAlternatives_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Annotation__AnnotationAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationAccess().getAnnotationIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getAnnotationAccess().getAnnotationIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Annotation__ValueAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationAccess().getValueNameValuesParserRuleCall_3_0()); }
	ruleNameValues{ after(grammarAccess.getAnnotationAccess().getValueNameValuesParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NameValue__NamePairAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNameValueAccess().getNamePairIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getNameValueAccess().getNamePairIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NameValue__ValuePairAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNameValueAccess().getValuePairExpressionParserRuleCall_2_0()); }
	ruleExpression{ after(grammarAccess.getNameValueAccess().getValuePairExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NameValues__MembersAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNameValuesAccess().getMembersNameValueParserRuleCall_0_0()); }
	ruleNameValue{ after(grammarAccess.getNameValuesAccess().getMembersNameValueParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NameValues__MembersAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNameValuesAccess().getMembersNameValueParserRuleCall_1_1_0()); }
	ruleNameValue{ after(grammarAccess.getNameValuesAccess().getMembersNameValueParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SupportsClause__ValueAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSupportsClauseAccess().getValueRequirementOrQualityCrossReference_1_0()); }
(
{ before(grammarAccess.getSupportsClauseAccess().getValueRequirementOrQualityIDTerminalRuleCall_1_0_1()); }
	RULE_ID{ after(grammarAccess.getSupportsClauseAccess().getValueRequirementOrQualityIDTerminalRuleCall_1_0_1()); }
)
{ after(grammarAccess.getSupportsClauseAccess().getValueRequirementOrQualityCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SupportsClause__ValueAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSupportsClauseAccess().getValueRequirementOrQualityCrossReference_2_1_0()); }
(
{ before(grammarAccess.getSupportsClauseAccess().getValueRequirementOrQualityIDTerminalRuleCall_2_1_0_1()); }
	RULE_ID{ after(grammarAccess.getSupportsClauseAccess().getValueRequirementOrQualityIDTerminalRuleCall_2_1_0_1()); }
)
{ after(grammarAccess.getSupportsClauseAccess().getValueRequirementOrQualityCrossReference_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InhibitsClause__ValueAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInhibitsClauseAccess().getValueRequirementOrQualityCrossReference_1_0()); }
(
{ before(grammarAccess.getInhibitsClauseAccess().getValueRequirementOrQualityIDTerminalRuleCall_1_0_1()); }
	RULE_ID{ after(grammarAccess.getInhibitsClauseAccess().getValueRequirementOrQualityIDTerminalRuleCall_1_0_1()); }
)
{ after(grammarAccess.getInhibitsClauseAccess().getValueRequirementOrQualityCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InhibitsClause__ValueAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInhibitsClauseAccess().getValueRequirementOrQualityCrossReference_2_1_0()); }
(
{ before(grammarAccess.getInhibitsClauseAccess().getValueRequirementOrQualityIDTerminalRuleCall_2_1_0_1()); }
	RULE_ID{ after(grammarAccess.getInhibitsClauseAccess().getValueRequirementOrQualityIDTerminalRuleCall_2_1_0_1()); }
)
{ after(grammarAccess.getInhibitsClauseAccess().getValueRequirementOrQualityCrossReference_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BecauseClause__MembersAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBecauseClauseAccess().getMembersBecauseCausalcontextParserRuleCall_1_0()); }
	ruleBecauseCausalcontext{ after(grammarAccess.getBecauseClauseAccess().getMembersBecauseCausalcontextParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BecauseClause__MembersAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBecauseClauseAccess().getMembersBecauseCausalcontextParserRuleCall_2_1_0()); }
	ruleBecauseCausalcontext{ after(grammarAccess.getBecauseClauseAccess().getMembersBecauseCausalcontextParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BecauseCausalcontext__ValueAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBecauseCausalcontextAccess().getValueRationaleCrossReference_0_0()); }
(
{ before(grammarAccess.getBecauseCausalcontextAccess().getValueRationaleIDTerminalRuleCall_0_0_1()); }
	RULE_ID{ after(grammarAccess.getBecauseCausalcontextAccess().getValueRationaleIDTerminalRuleCall_0_0_1()); }
)
{ after(grammarAccess.getBecauseCausalcontextAccess().getValueRationaleCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BecauseCausalcontext__ArgumentListAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBecauseCausalcontextAccess().getArgumentListArgumentListParserRuleCall_2_0()); }
	ruleArgumentList{ after(grammarAccess.getBecauseCausalcontextAccess().getArgumentListArgumentListParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__NamesAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterListAccess().getNamesIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getParameterListAccess().getNamesIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__NamesAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterListAccess().getNamesIDTerminalRuleCall_1_1_0()); }
	RULE_ID{ after(grammarAccess.getParameterListAccess().getNamesIDTerminalRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentList__MembersAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgumentListAccess().getMembersMemberExpressionParserRuleCall_0_0()); }
	ruleMemberExpression{ after(grammarAccess.getArgumentListAccess().getMembersMemberExpressionParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentList__MembersAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgumentListAccess().getMembersMemberExpressionParserRuleCall_1_1_0()); }
	ruleMemberExpression{ after(grammarAccess.getArgumentListAccess().getMembersMemberExpressionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SubsetofExpression__LogicalOrAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubsetofExpressionAccess().getLogicalOrLogicalOrExpressionParserRuleCall_0_0()); }
	ruleLogicalOrExpression{ after(grammarAccess.getSubsetofExpressionAccess().getLogicalOrLogicalOrExpressionParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SubsetofExpression__LogicalOrAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubsetofExpressionAccess().getLogicalOrLogicalOrExpressionParserRuleCall_1_1_0()); }
	ruleLogicalOrExpression{ after(grammarAccess.getSubsetofExpressionAccess().getLogicalOrLogicalOrExpressionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalOrExpression__LogicalAndAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogicalOrExpressionAccess().getLogicalAndLogicalAndExpressionParserRuleCall_0_0()); }
	ruleLogicalAndExpression{ after(grammarAccess.getLogicalOrExpressionAccess().getLogicalAndLogicalAndExpressionParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalOrExpression__LogicalAndAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogicalOrExpressionAccess().getLogicalAndLogicalAndExpressionParserRuleCall_1_1_0()); }
	ruleLogicalAndExpression{ after(grammarAccess.getLogicalOrExpressionAccess().getLogicalAndLogicalAndExpressionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalAndExpression__BitwiseOrAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogicalAndExpressionAccess().getBitwiseOrBitwiseOrExpressionParserRuleCall_0_0()); }
	ruleBitwiseOrExpression{ after(grammarAccess.getLogicalAndExpressionAccess().getBitwiseOrBitwiseOrExpressionParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalAndExpression__BitwiseOrAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogicalAndExpressionAccess().getBitwiseOrBitwiseOrExpressionParserRuleCall_1_1_0()); }
	ruleBitwiseOrExpression{ after(grammarAccess.getLogicalAndExpressionAccess().getBitwiseOrBitwiseOrExpressionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BitwiseOrExpression__BitwiseXorAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitwiseOrExpressionAccess().getBitwiseXorBitwiseXorExpressionParserRuleCall_0_0()); }
	ruleBitwiseXorExpression{ after(grammarAccess.getBitwiseOrExpressionAccess().getBitwiseXorBitwiseXorExpressionParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BitwiseOrExpression__BitwiseXorAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitwiseOrExpressionAccess().getBitwiseXorBitwiseXorExpressionParserRuleCall_1_1_0()); }
	ruleBitwiseXorExpression{ after(grammarAccess.getBitwiseOrExpressionAccess().getBitwiseXorBitwiseXorExpressionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BitwiseXorExpression__BitwiseAndAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitwiseXorExpressionAccess().getBitwiseAndBitwiseAndExpressionParserRuleCall_0_0()); }
	ruleBitwiseAndExpression{ after(grammarAccess.getBitwiseXorExpressionAccess().getBitwiseAndBitwiseAndExpressionParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BitwiseXorExpression__BitwiseAndAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitwiseXorExpressionAccess().getBitwiseAndBitwiseAndExpressionParserRuleCall_1_1_0()); }
	ruleBitwiseAndExpression{ after(grammarAccess.getBitwiseXorExpressionAccess().getBitwiseAndBitwiseAndExpressionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BitwiseAndExpression__EqualityAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitwiseAndExpressionAccess().getEqualityEqualityExpressionParserRuleCall_0_0()); }
	ruleEqualityExpression{ after(grammarAccess.getBitwiseAndExpressionAccess().getEqualityEqualityExpressionParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BitwiseAndExpression__EqualityAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitwiseAndExpressionAccess().getEqualityEqualityExpressionParserRuleCall_1_1_0()); }
	ruleEqualityExpression{ after(grammarAccess.getBitwiseAndExpressionAccess().getEqualityEqualityExpressionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__RelationalAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEqualityExpressionAccess().getRelationalRelationalExpressionParserRuleCall_0_0()); }
	ruleRelationalExpression{ after(grammarAccess.getEqualityExpressionAccess().getRelationalRelationalExpressionParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__OpAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEqualityExpressionAccess().getOpAlternatives_1_0_0()); }
(rule__EqualityExpression__OpAlternatives_1_0_0)
{ after(grammarAccess.getEqualityExpressionAccess().getOpAlternatives_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__RelationalAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEqualityExpressionAccess().getRelationalRelationalExpressionParserRuleCall_1_1_0()); }
	ruleRelationalExpression{ after(grammarAccess.getEqualityExpressionAccess().getRelationalRelationalExpressionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__AdditiveAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalExpressionAccess().getAdditiveAdditiveExpressionParserRuleCall_0_0()); }
	ruleAdditiveExpression{ after(grammarAccess.getRelationalExpressionAccess().getAdditiveAdditiveExpressionParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__OpAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalExpressionAccess().getOpAlternatives_1_0_0()); }
(rule__RelationalExpression__OpAlternatives_1_0_0)
{ after(grammarAccess.getRelationalExpressionAccess().getOpAlternatives_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__AdditiveAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalExpressionAccess().getAdditiveAdditiveExpressionParserRuleCall_1_1_0()); }
	ruleAdditiveExpression{ after(grammarAccess.getRelationalExpressionAccess().getAdditiveAdditiveExpressionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__MultiplicativeAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditiveExpressionAccess().getMultiplicativeMultiplicativeExpressionParserRuleCall_0_0()); }
	ruleMultiplicativeExpression{ after(grammarAccess.getAdditiveExpressionAccess().getMultiplicativeMultiplicativeExpressionParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__OpAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditiveExpressionAccess().getOpAlternatives_1_0_0()); }
(rule__AdditiveExpression__OpAlternatives_1_0_0)
{ after(grammarAccess.getAdditiveExpressionAccess().getOpAlternatives_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__MultiplicativeAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditiveExpressionAccess().getMultiplicativeMultiplicativeExpressionParserRuleCall_1_1_0()); }
	ruleMultiplicativeExpression{ after(grammarAccess.getAdditiveExpressionAccess().getMultiplicativeMultiplicativeExpressionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__UnaryAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicativeExpressionAccess().getUnaryUnaryExpressionParserRuleCall_0_0()); }
	ruleUnaryExpression{ after(grammarAccess.getMultiplicativeExpressionAccess().getUnaryUnaryExpressionParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__OpAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicativeExpressionAccess().getOpAlternatives_1_0_0()); }
(rule__MultiplicativeExpression__OpAlternatives_1_0_0)
{ after(grammarAccess.getMultiplicativeExpressionAccess().getOpAlternatives_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__UnaryAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicativeExpressionAccess().getUnaryUnaryExpressionParserRuleCall_1_1_0()); }
	ruleUnaryExpression{ after(grammarAccess.getMultiplicativeExpressionAccess().getUnaryUnaryExpressionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__OpAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExpressionAccess().getOpAlternatives_0_0()); }
(rule__UnaryExpression__OpAlternatives_0_0)
{ after(grammarAccess.getUnaryExpressionAccess().getOpAlternatives_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__RightAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExpressionAccess().getRightPrimaryExpressionParserRuleCall_1_0()); }
	rulePrimaryExpression{ after(grammarAccess.getUnaryExpressionAccess().getRightPrimaryExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MemberExpression__MemberAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberExpressionAccess().getMemberMemberPartParserRuleCall_0_0()); }
	ruleMemberPart{ after(grammarAccess.getMemberExpressionAccess().getMemberMemberPartParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MemberExpression__MemberAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberExpressionAccess().getMemberMemberPartParserRuleCall_1_1_0()); }
	ruleMemberPart{ after(grammarAccess.getMemberExpressionAccess().getMemberMemberPartParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MemberPart__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberPartAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getMemberPartAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MemberPart__NameAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberPartAccess().getNameIDTerminalRuleCall_1_0_0()); }
	RULE_ID{ after(grammarAccess.getMemberPartAccess().getNameIDTerminalRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MemberPart__MemberArgumentsAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberPartAccess().getMemberArgumentsMemberArgumentsParserRuleCall_1_2_0()); }
	ruleMemberArguments{ after(grammarAccess.getMemberPartAccess().getMemberArgumentsMemberArgumentsParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MemberArguments__ExpressionAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberArgumentsAccess().getExpressionExpressionParserRuleCall_0_0()); }
	ruleExpression{ after(grammarAccess.getMemberArgumentsAccess().getExpressionExpressionParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MemberArguments__ExpressionAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberArgumentsAccess().getExpressionExpressionParserRuleCall_1_1_0()); }
	ruleExpression{ after(grammarAccess.getMemberArgumentsAccess().getExpressionExpressionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SetLiteral__LiteralAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSetLiteralAccess().getLiteralLiteralParserRuleCall_2_0_0()); }
	ruleLiteral{ after(grammarAccess.getSetLiteralAccess().getLiteralLiteralParserRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SetLiteral__LiteralAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSetLiteralAccess().getLiteralLiteralParserRuleCall_2_1_1_0()); }
	ruleLiteral{ after(grammarAccess.getSetLiteralAccess().getLiteralLiteralParserRuleCall_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_KEYWORD : ('architecture'|'requirement'|'QualityAttribute'|'rationale'|'reason'|'template'|'provides'|'requires'|'property'|'check'|'system'|'layer'|'component'|'connector'|'link'|'supports'|'inhibits'|'extends'|'because'|'over'|'to'|'in'|'out'|'subsetof'|'true'|'false');

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


